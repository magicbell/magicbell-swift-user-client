// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.URL
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
#else
import struct Foundation.URL
import struct Foundation.Data
import struct Foundation.Date
#endif
/// A type that performs HTTP operations defined by the OpenAPI document.
public protocol APIProtocol: Sendable {
    /// Lists all mobile_push tokens belonging to the authenticated user. Returns a paginated list of tokens, including their status, creation dates, and associated metadata.
    ///
    /// - Remark: HTTP `GET /channels/mobile_push/apns/tokens`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/apns/tokens/get(get_mobile_push_apns_tokens)`.
    func get_mobile_push_apns_tokens(_ input: Operations.get_mobile_push_apns_tokens.Input) async throws -> Operations.get_mobile_push_apns_tokens.Output
    /// Saves a mobile_push token for the authenticated user. This token serves as a credential for accessing channel-specific functionality. Each token is unique to the user and channel combination, allowing for direct communication with the user via the channel.
    ///
    /// - Remark: HTTP `POST /channels/mobile_push/apns/tokens`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/apns/tokens/post(save_mobile_push_apns_token)`.
    func save_mobile_push_apns_token(_ input: Operations.save_mobile_push_apns_token.Input) async throws -> Operations.save_mobile_push_apns_token.Output
    /// Retrieves details of a specific mobile_push token belonging to the authenticated user. Returns information about the token's status, creation date, and any associated metadata. Users can only access their own tokens.
    ///
    /// - Remark: HTTP `GET /channels/mobile_push/apns/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/apns/tokens/{token_id}/get(get_mobile_push_apns_token)`.
    func get_mobile_push_apns_token(_ input: Operations.get_mobile_push_apns_token.Input) async throws -> Operations.get_mobile_push_apns_token.Output
    /// Revokes one of the authenticated user's mobile_push tokens. This permanently invalidates the specified token, preventing it from being used for future channel access. This action cannot be undone. Users can only revoke their own tokens.
    ///
    /// - Remark: HTTP `DELETE /channels/mobile_push/apns/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/apns/tokens/{token_id}/delete(discard_mobile_push_apns_token)`.
    func discard_mobile_push_apns_token(_ input: Operations.discard_mobile_push_apns_token.Input) async throws -> Operations.discard_mobile_push_apns_token.Output
    /// Lists all mobile_push tokens belonging to the authenticated user. Returns a paginated list of tokens, including their status, creation dates, and associated metadata.
    ///
    /// - Remark: HTTP `GET /channels/mobile_push/expo/tokens`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/expo/tokens/get(get_mobile_push_expo_tokens)`.
    func get_mobile_push_expo_tokens(_ input: Operations.get_mobile_push_expo_tokens.Input) async throws -> Operations.get_mobile_push_expo_tokens.Output
    /// Saves a mobile_push token for the authenticated user. This token serves as a credential for accessing channel-specific functionality. Each token is unique to the user and channel combination, allowing for direct communication with the user via the channel.
    ///
    /// - Remark: HTTP `POST /channels/mobile_push/expo/tokens`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/expo/tokens/post(save_mobile_push_expo_token)`.
    func save_mobile_push_expo_token(_ input: Operations.save_mobile_push_expo_token.Input) async throws -> Operations.save_mobile_push_expo_token.Output
    /// Retrieves details of a specific mobile_push token belonging to the authenticated user. Returns information about the token's status, creation date, and any associated metadata. Users can only access their own tokens.
    ///
    /// - Remark: HTTP `GET /channels/mobile_push/expo/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/expo/tokens/{token_id}/get(get_mobile_push_expo_token)`.
    func get_mobile_push_expo_token(_ input: Operations.get_mobile_push_expo_token.Input) async throws -> Operations.get_mobile_push_expo_token.Output
    /// Revokes one of the authenticated user's mobile_push tokens. This permanently invalidates the specified token, preventing it from being used for future channel access. This action cannot be undone. Users can only revoke their own tokens.
    ///
    /// - Remark: HTTP `DELETE /channels/mobile_push/expo/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/expo/tokens/{token_id}/delete(discard_mobile_push_expo_token)`.
    func discard_mobile_push_expo_token(_ input: Operations.discard_mobile_push_expo_token.Input) async throws -> Operations.discard_mobile_push_expo_token.Output
    /// Lists all mobile_push tokens belonging to the authenticated user. Returns a paginated list of tokens, including their status, creation dates, and associated metadata.
    ///
    /// - Remark: HTTP `GET /channels/mobile_push/fcm/tokens`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/fcm/tokens/get(get_mobile_push_fcm_tokens)`.
    func get_mobile_push_fcm_tokens(_ input: Operations.get_mobile_push_fcm_tokens.Input) async throws -> Operations.get_mobile_push_fcm_tokens.Output
    /// Saves a mobile_push token for the authenticated user. This token serves as a credential for accessing channel-specific functionality. Each token is unique to the user and channel combination, allowing for direct communication with the user via the channel.
    ///
    /// - Remark: HTTP `POST /channels/mobile_push/fcm/tokens`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/fcm/tokens/post(save_mobile_push_fcm_token)`.
    func save_mobile_push_fcm_token(_ input: Operations.save_mobile_push_fcm_token.Input) async throws -> Operations.save_mobile_push_fcm_token.Output
    /// Retrieves details of a specific mobile_push token belonging to the authenticated user. Returns information about the token's status, creation date, and any associated metadata. Users can only access their own tokens.
    ///
    /// - Remark: HTTP `GET /channels/mobile_push/fcm/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/fcm/tokens/{token_id}/get(get_mobile_push_fcm_token)`.
    func get_mobile_push_fcm_token(_ input: Operations.get_mobile_push_fcm_token.Input) async throws -> Operations.get_mobile_push_fcm_token.Output
    /// Revokes one of the authenticated user's mobile_push tokens. This permanently invalidates the specified token, preventing it from being used for future channel access. This action cannot be undone. Users can only revoke their own tokens.
    ///
    /// - Remark: HTTP `DELETE /channels/mobile_push/fcm/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/fcm/tokens/{token_id}/delete(discard_mobile_push_fcm_token)`.
    func discard_mobile_push_fcm_token(_ input: Operations.discard_mobile_push_fcm_token.Input) async throws -> Operations.discard_mobile_push_fcm_token.Output
    /// Lists all slack tokens belonging to the authenticated user. Returns a paginated list of tokens, including their status, creation dates, and associated metadata.
    ///
    /// - Remark: HTTP `GET /channels/slack/tokens`.
    /// - Remark: Generated from `#/paths//channels/slack/tokens/get(get_slack_tokens)`.
    func get_slack_tokens(_ input: Operations.get_slack_tokens.Input) async throws -> Operations.get_slack_tokens.Output
    /// Saves a slack token for the authenticated user. This token serves as a credential for accessing channel-specific functionality. Each token is unique to the user and channel combination, allowing for direct communication with the user via the channel.
    ///
    /// - Remark: HTTP `POST /channels/slack/tokens`.
    /// - Remark: Generated from `#/paths//channels/slack/tokens/post(save_slack_token)`.
    func save_slack_token(_ input: Operations.save_slack_token.Input) async throws -> Operations.save_slack_token.Output
    /// Retrieves details of a specific slack token belonging to the authenticated user. Returns information about the token's status, creation date, and any associated metadata. Users can only access their own tokens.
    ///
    /// - Remark: HTTP `GET /channels/slack/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/slack/tokens/{token_id}/get(get_slack_token)`.
    func get_slack_token(_ input: Operations.get_slack_token.Input) async throws -> Operations.get_slack_token.Output
    /// Revokes one of the authenticated user's slack tokens. This permanently invalidates the specified token, preventing it from being used for future channel access. This action cannot be undone. Users can only revoke their own tokens.
    ///
    /// - Remark: HTTP `DELETE /channels/slack/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/slack/tokens/{token_id}/delete(discard_slack_token)`.
    func discard_slack_token(_ input: Operations.discard_slack_token.Input) async throws -> Operations.discard_slack_token.Output
    /// Lists all teams tokens belonging to the authenticated user. Returns a paginated list of tokens, including their status, creation dates, and associated metadata.
    ///
    /// - Remark: HTTP `GET /channels/teams/tokens`.
    /// - Remark: Generated from `#/paths//channels/teams/tokens/get(get_teams_tokens)`.
    func get_teams_tokens(_ input: Operations.get_teams_tokens.Input) async throws -> Operations.get_teams_tokens.Output
    /// Saves a teams token for the authenticated user. This token serves as a credential for accessing channel-specific functionality. Each token is unique to the user and channel combination, allowing for direct communication with the user via the channel.
    ///
    /// - Remark: HTTP `POST /channels/teams/tokens`.
    /// - Remark: Generated from `#/paths//channels/teams/tokens/post(save_teams_token)`.
    func save_teams_token(_ input: Operations.save_teams_token.Input) async throws -> Operations.save_teams_token.Output
    /// Retrieves details of a specific teams token belonging to the authenticated user. Returns information about the token's status, creation date, and any associated metadata. Users can only access their own tokens.
    ///
    /// - Remark: HTTP `GET /channels/teams/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/teams/tokens/{token_id}/get(get_teams_token)`.
    func get_teams_token(_ input: Operations.get_teams_token.Input) async throws -> Operations.get_teams_token.Output
    /// Revokes one of the authenticated user's teams tokens. This permanently invalidates the specified token, preventing it from being used for future channel access. This action cannot be undone. Users can only revoke their own tokens.
    ///
    /// - Remark: HTTP `DELETE /channels/teams/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/teams/tokens/{token_id}/delete(discard_teams_token)`.
    func discard_teams_token(_ input: Operations.discard_teams_token.Input) async throws -> Operations.discard_teams_token.Output
    /// Lists all web_push tokens belonging to the authenticated user. Returns a paginated list of tokens, including their status, creation dates, and associated metadata.
    ///
    /// - Remark: HTTP `GET /channels/web_push/tokens`.
    /// - Remark: Generated from `#/paths//channels/web_push/tokens/get(get_web_push_tokens)`.
    func get_web_push_tokens(_ input: Operations.get_web_push_tokens.Input) async throws -> Operations.get_web_push_tokens.Output
    /// Saves a web_push token for the authenticated user. This token serves as a credential for accessing channel-specific functionality. Each token is unique to the user and channel combination, allowing for direct communication with the user via the channel.
    ///
    /// - Remark: HTTP `POST /channels/web_push/tokens`.
    /// - Remark: Generated from `#/paths//channels/web_push/tokens/post(save_web_push_token)`.
    func save_web_push_token(_ input: Operations.save_web_push_token.Input) async throws -> Operations.save_web_push_token.Output
    /// Retrieves details of a specific web_push token belonging to the authenticated user. Returns information about the token's status, creation date, and any associated metadata. Users can only access their own tokens.
    ///
    /// - Remark: HTTP `GET /channels/web_push/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/web_push/tokens/{token_id}/get(get_web_push_token)`.
    func get_web_push_token(_ input: Operations.get_web_push_token.Input) async throws -> Operations.get_web_push_token.Output
    /// Revokes one of the authenticated user's web_push tokens. This permanently invalidates the specified token, preventing it from being used for future channel access. This action cannot be undone. Users can only revoke their own tokens.
    ///
    /// - Remark: HTTP `DELETE /channels/web_push/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/web_push/tokens/{token_id}/delete(discard_web_push_token)`.
    func discard_web_push_token(_ input: Operations.discard_web_push_token.Input) async throws -> Operations.discard_web_push_token.Output
    /// Creates a new installation of a inbox integration for a user. This endpoint is used when an integration needs to be set up with user-specific credentials or configuration.
    ///
    /// - Remark: HTTP `POST /integrations/inbox/installations`.
    /// - Remark: Generated from `#/paths//integrations/inbox/installations/post(save_inbox_installation)`.
    func save_inbox_installation(_ input: Operations.save_inbox_installation.Input) async throws -> Operations.save_inbox_installation.Output
    /// Initiates the installation flow for a inbox integration. This is the first step in a multi-step installation process where user authorization or external service configuration may be required.
    ///
    /// - Remark: HTTP `POST /integrations/inbox/installations/start`.
    /// - Remark: Generated from `#/paths//integrations/inbox/installations/start/post(start_inbox_installation)`.
    func start_inbox_installation(_ input: Operations.start_inbox_installation.Input) async throws -> Operations.start_inbox_installation.Output
    /// Creates a new installation of a slack integration for a user. This endpoint is used when an integration needs to be set up with user-specific credentials or configuration.
    ///
    /// - Remark: HTTP `POST /integrations/slack/installations`.
    /// - Remark: Generated from `#/paths//integrations/slack/installations/post(save_slack_installation)`.
    func save_slack_installation(_ input: Operations.save_slack_installation.Input) async throws -> Operations.save_slack_installation.Output
    /// Completes the installation flow for a slack integration. This endpoint is typically called after the user has completed any required authorization steps with slack.
    ///
    /// - Remark: HTTP `POST /integrations/slack/installations/finish`.
    /// - Remark: Generated from `#/paths//integrations/slack/installations/finish/post(finish_slack_installation)`.
    func finish_slack_installation(_ input: Operations.finish_slack_installation.Input) async throws -> Operations.finish_slack_installation.Output
    /// Initiates the installation flow for a slack integration. This is the first step in a multi-step installation process where user authorization or external service configuration may be required.
    ///
    /// - Remark: HTTP `POST /integrations/slack/installations/start`.
    /// - Remark: Generated from `#/paths//integrations/slack/installations/start/post(start_slack_installation)`.
    func start_slack_installation(_ input: Operations.start_slack_installation.Input) async throws -> Operations.start_slack_installation.Output
    /// Creates a new installation of a templates integration for a user. This endpoint is used when an integration needs to be set up with user-specific credentials or configuration.
    ///
    /// - Remark: HTTP `POST /integrations/templates/installations`.
    /// - Remark: Generated from `#/paths//integrations/templates/installations/post(save_templates_installation)`.
    func save_templates_installation(_ input: Operations.save_templates_installation.Input) async throws -> Operations.save_templates_installation.Output
    /// Creates a new installation of a web_push integration for a user. This endpoint is used when an integration needs to be set up with user-specific credentials or configuration.
    ///
    /// - Remark: HTTP `POST /integrations/web_push/installations`.
    /// - Remark: Generated from `#/paths//integrations/web_push/installations/post(save_web_push_installation)`.
    func save_web_push_installation(_ input: Operations.save_web_push_installation.Input) async throws -> Operations.save_web_push_installation.Output
    /// Initiates the installation flow for a web_push integration. This is the first step in a multi-step installation process where user authorization or external service configuration may be required.
    ///
    /// - Remark: HTTP `POST /integrations/web_push/installations/start`.
    /// - Remark: Generated from `#/paths//integrations/web_push/installations/start/post(start_web_push_installation)`.
    func start_web_push_installation(_ input: Operations.start_web_push_installation.Input) async throws -> Operations.start_web_push_installation.Output
}

/// Convenience overloads for operation inputs.
extension APIProtocol {
    /// Lists all mobile_push tokens belonging to the authenticated user. Returns a paginated list of tokens, including their status, creation dates, and associated metadata.
    ///
    /// - Remark: HTTP `GET /channels/mobile_push/apns/tokens`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/apns/tokens/get(get_mobile_push_apns_tokens)`.
    public func get_mobile_push_apns_tokens(
        query: Operations.get_mobile_push_apns_tokens.Input.Query = .init(),
        headers: Operations.get_mobile_push_apns_tokens.Input.Headers = .init()
    ) async throws -> Operations.get_mobile_push_apns_tokens.Output {
        try await get_mobile_push_apns_tokens(Operations.get_mobile_push_apns_tokens.Input(
            query: query,
            headers: headers
        ))
    }
    /// Saves a mobile_push token for the authenticated user. This token serves as a credential for accessing channel-specific functionality. Each token is unique to the user and channel combination, allowing for direct communication with the user via the channel.
    ///
    /// - Remark: HTTP `POST /channels/mobile_push/apns/tokens`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/apns/tokens/post(save_mobile_push_apns_token)`.
    public func save_mobile_push_apns_token(
        headers: Operations.save_mobile_push_apns_token.Input.Headers = .init(),
        body: Operations.save_mobile_push_apns_token.Input.Body? = nil
    ) async throws -> Operations.save_mobile_push_apns_token.Output {
        try await save_mobile_push_apns_token(Operations.save_mobile_push_apns_token.Input(
            headers: headers,
            body: body
        ))
    }
    /// Retrieves details of a specific mobile_push token belonging to the authenticated user. Returns information about the token's status, creation date, and any associated metadata. Users can only access their own tokens.
    ///
    /// - Remark: HTTP `GET /channels/mobile_push/apns/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/apns/tokens/{token_id}/get(get_mobile_push_apns_token)`.
    public func get_mobile_push_apns_token(
        path: Operations.get_mobile_push_apns_token.Input.Path,
        headers: Operations.get_mobile_push_apns_token.Input.Headers = .init()
    ) async throws -> Operations.get_mobile_push_apns_token.Output {
        try await get_mobile_push_apns_token(Operations.get_mobile_push_apns_token.Input(
            path: path,
            headers: headers
        ))
    }
    /// Revokes one of the authenticated user's mobile_push tokens. This permanently invalidates the specified token, preventing it from being used for future channel access. This action cannot be undone. Users can only revoke their own tokens.
    ///
    /// - Remark: HTTP `DELETE /channels/mobile_push/apns/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/apns/tokens/{token_id}/delete(discard_mobile_push_apns_token)`.
    public func discard_mobile_push_apns_token(
        path: Operations.discard_mobile_push_apns_token.Input.Path,
        headers: Operations.discard_mobile_push_apns_token.Input.Headers = .init()
    ) async throws -> Operations.discard_mobile_push_apns_token.Output {
        try await discard_mobile_push_apns_token(Operations.discard_mobile_push_apns_token.Input(
            path: path,
            headers: headers
        ))
    }
    /// Lists all mobile_push tokens belonging to the authenticated user. Returns a paginated list of tokens, including their status, creation dates, and associated metadata.
    ///
    /// - Remark: HTTP `GET /channels/mobile_push/expo/tokens`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/expo/tokens/get(get_mobile_push_expo_tokens)`.
    public func get_mobile_push_expo_tokens(
        query: Operations.get_mobile_push_expo_tokens.Input.Query = .init(),
        headers: Operations.get_mobile_push_expo_tokens.Input.Headers = .init()
    ) async throws -> Operations.get_mobile_push_expo_tokens.Output {
        try await get_mobile_push_expo_tokens(Operations.get_mobile_push_expo_tokens.Input(
            query: query,
            headers: headers
        ))
    }
    /// Saves a mobile_push token for the authenticated user. This token serves as a credential for accessing channel-specific functionality. Each token is unique to the user and channel combination, allowing for direct communication with the user via the channel.
    ///
    /// - Remark: HTTP `POST /channels/mobile_push/expo/tokens`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/expo/tokens/post(save_mobile_push_expo_token)`.
    public func save_mobile_push_expo_token(
        headers: Operations.save_mobile_push_expo_token.Input.Headers = .init(),
        body: Operations.save_mobile_push_expo_token.Input.Body? = nil
    ) async throws -> Operations.save_mobile_push_expo_token.Output {
        try await save_mobile_push_expo_token(Operations.save_mobile_push_expo_token.Input(
            headers: headers,
            body: body
        ))
    }
    /// Retrieves details of a specific mobile_push token belonging to the authenticated user. Returns information about the token's status, creation date, and any associated metadata. Users can only access their own tokens.
    ///
    /// - Remark: HTTP `GET /channels/mobile_push/expo/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/expo/tokens/{token_id}/get(get_mobile_push_expo_token)`.
    public func get_mobile_push_expo_token(
        path: Operations.get_mobile_push_expo_token.Input.Path,
        headers: Operations.get_mobile_push_expo_token.Input.Headers = .init()
    ) async throws -> Operations.get_mobile_push_expo_token.Output {
        try await get_mobile_push_expo_token(Operations.get_mobile_push_expo_token.Input(
            path: path,
            headers: headers
        ))
    }
    /// Revokes one of the authenticated user's mobile_push tokens. This permanently invalidates the specified token, preventing it from being used for future channel access. This action cannot be undone. Users can only revoke their own tokens.
    ///
    /// - Remark: HTTP `DELETE /channels/mobile_push/expo/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/expo/tokens/{token_id}/delete(discard_mobile_push_expo_token)`.
    public func discard_mobile_push_expo_token(
        path: Operations.discard_mobile_push_expo_token.Input.Path,
        headers: Operations.discard_mobile_push_expo_token.Input.Headers = .init()
    ) async throws -> Operations.discard_mobile_push_expo_token.Output {
        try await discard_mobile_push_expo_token(Operations.discard_mobile_push_expo_token.Input(
            path: path,
            headers: headers
        ))
    }
    /// Lists all mobile_push tokens belonging to the authenticated user. Returns a paginated list of tokens, including their status, creation dates, and associated metadata.
    ///
    /// - Remark: HTTP `GET /channels/mobile_push/fcm/tokens`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/fcm/tokens/get(get_mobile_push_fcm_tokens)`.
    public func get_mobile_push_fcm_tokens(
        query: Operations.get_mobile_push_fcm_tokens.Input.Query = .init(),
        headers: Operations.get_mobile_push_fcm_tokens.Input.Headers = .init()
    ) async throws -> Operations.get_mobile_push_fcm_tokens.Output {
        try await get_mobile_push_fcm_tokens(Operations.get_mobile_push_fcm_tokens.Input(
            query: query,
            headers: headers
        ))
    }
    /// Saves a mobile_push token for the authenticated user. This token serves as a credential for accessing channel-specific functionality. Each token is unique to the user and channel combination, allowing for direct communication with the user via the channel.
    ///
    /// - Remark: HTTP `POST /channels/mobile_push/fcm/tokens`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/fcm/tokens/post(save_mobile_push_fcm_token)`.
    public func save_mobile_push_fcm_token(
        headers: Operations.save_mobile_push_fcm_token.Input.Headers = .init(),
        body: Operations.save_mobile_push_fcm_token.Input.Body? = nil
    ) async throws -> Operations.save_mobile_push_fcm_token.Output {
        try await save_mobile_push_fcm_token(Operations.save_mobile_push_fcm_token.Input(
            headers: headers,
            body: body
        ))
    }
    /// Retrieves details of a specific mobile_push token belonging to the authenticated user. Returns information about the token's status, creation date, and any associated metadata. Users can only access their own tokens.
    ///
    /// - Remark: HTTP `GET /channels/mobile_push/fcm/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/fcm/tokens/{token_id}/get(get_mobile_push_fcm_token)`.
    public func get_mobile_push_fcm_token(
        path: Operations.get_mobile_push_fcm_token.Input.Path,
        headers: Operations.get_mobile_push_fcm_token.Input.Headers = .init()
    ) async throws -> Operations.get_mobile_push_fcm_token.Output {
        try await get_mobile_push_fcm_token(Operations.get_mobile_push_fcm_token.Input(
            path: path,
            headers: headers
        ))
    }
    /// Revokes one of the authenticated user's mobile_push tokens. This permanently invalidates the specified token, preventing it from being used for future channel access. This action cannot be undone. Users can only revoke their own tokens.
    ///
    /// - Remark: HTTP `DELETE /channels/mobile_push/fcm/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/fcm/tokens/{token_id}/delete(discard_mobile_push_fcm_token)`.
    public func discard_mobile_push_fcm_token(
        path: Operations.discard_mobile_push_fcm_token.Input.Path,
        headers: Operations.discard_mobile_push_fcm_token.Input.Headers = .init()
    ) async throws -> Operations.discard_mobile_push_fcm_token.Output {
        try await discard_mobile_push_fcm_token(Operations.discard_mobile_push_fcm_token.Input(
            path: path,
            headers: headers
        ))
    }
    /// Lists all slack tokens belonging to the authenticated user. Returns a paginated list of tokens, including their status, creation dates, and associated metadata.
    ///
    /// - Remark: HTTP `GET /channels/slack/tokens`.
    /// - Remark: Generated from `#/paths//channels/slack/tokens/get(get_slack_tokens)`.
    public func get_slack_tokens(
        query: Operations.get_slack_tokens.Input.Query = .init(),
        headers: Operations.get_slack_tokens.Input.Headers = .init()
    ) async throws -> Operations.get_slack_tokens.Output {
        try await get_slack_tokens(Operations.get_slack_tokens.Input(
            query: query,
            headers: headers
        ))
    }
    /// Saves a slack token for the authenticated user. This token serves as a credential for accessing channel-specific functionality. Each token is unique to the user and channel combination, allowing for direct communication with the user via the channel.
    ///
    /// - Remark: HTTP `POST /channels/slack/tokens`.
    /// - Remark: Generated from `#/paths//channels/slack/tokens/post(save_slack_token)`.
    public func save_slack_token(
        headers: Operations.save_slack_token.Input.Headers = .init(),
        body: Operations.save_slack_token.Input.Body? = nil
    ) async throws -> Operations.save_slack_token.Output {
        try await save_slack_token(Operations.save_slack_token.Input(
            headers: headers,
            body: body
        ))
    }
    /// Retrieves details of a specific slack token belonging to the authenticated user. Returns information about the token's status, creation date, and any associated metadata. Users can only access their own tokens.
    ///
    /// - Remark: HTTP `GET /channels/slack/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/slack/tokens/{token_id}/get(get_slack_token)`.
    public func get_slack_token(
        path: Operations.get_slack_token.Input.Path,
        headers: Operations.get_slack_token.Input.Headers = .init()
    ) async throws -> Operations.get_slack_token.Output {
        try await get_slack_token(Operations.get_slack_token.Input(
            path: path,
            headers: headers
        ))
    }
    /// Revokes one of the authenticated user's slack tokens. This permanently invalidates the specified token, preventing it from being used for future channel access. This action cannot be undone. Users can only revoke their own tokens.
    ///
    /// - Remark: HTTP `DELETE /channels/slack/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/slack/tokens/{token_id}/delete(discard_slack_token)`.
    public func discard_slack_token(
        path: Operations.discard_slack_token.Input.Path,
        headers: Operations.discard_slack_token.Input.Headers = .init()
    ) async throws -> Operations.discard_slack_token.Output {
        try await discard_slack_token(Operations.discard_slack_token.Input(
            path: path,
            headers: headers
        ))
    }
    /// Lists all teams tokens belonging to the authenticated user. Returns a paginated list of tokens, including their status, creation dates, and associated metadata.
    ///
    /// - Remark: HTTP `GET /channels/teams/tokens`.
    /// - Remark: Generated from `#/paths//channels/teams/tokens/get(get_teams_tokens)`.
    public func get_teams_tokens(
        query: Operations.get_teams_tokens.Input.Query = .init(),
        headers: Operations.get_teams_tokens.Input.Headers = .init()
    ) async throws -> Operations.get_teams_tokens.Output {
        try await get_teams_tokens(Operations.get_teams_tokens.Input(
            query: query,
            headers: headers
        ))
    }
    /// Saves a teams token for the authenticated user. This token serves as a credential for accessing channel-specific functionality. Each token is unique to the user and channel combination, allowing for direct communication with the user via the channel.
    ///
    /// - Remark: HTTP `POST /channels/teams/tokens`.
    /// - Remark: Generated from `#/paths//channels/teams/tokens/post(save_teams_token)`.
    public func save_teams_token(
        headers: Operations.save_teams_token.Input.Headers = .init(),
        body: Operations.save_teams_token.Input.Body? = nil
    ) async throws -> Operations.save_teams_token.Output {
        try await save_teams_token(Operations.save_teams_token.Input(
            headers: headers,
            body: body
        ))
    }
    /// Retrieves details of a specific teams token belonging to the authenticated user. Returns information about the token's status, creation date, and any associated metadata. Users can only access their own tokens.
    ///
    /// - Remark: HTTP `GET /channels/teams/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/teams/tokens/{token_id}/get(get_teams_token)`.
    public func get_teams_token(
        path: Operations.get_teams_token.Input.Path,
        headers: Operations.get_teams_token.Input.Headers = .init()
    ) async throws -> Operations.get_teams_token.Output {
        try await get_teams_token(Operations.get_teams_token.Input(
            path: path,
            headers: headers
        ))
    }
    /// Revokes one of the authenticated user's teams tokens. This permanently invalidates the specified token, preventing it from being used for future channel access. This action cannot be undone. Users can only revoke their own tokens.
    ///
    /// - Remark: HTTP `DELETE /channels/teams/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/teams/tokens/{token_id}/delete(discard_teams_token)`.
    public func discard_teams_token(
        path: Operations.discard_teams_token.Input.Path,
        headers: Operations.discard_teams_token.Input.Headers = .init()
    ) async throws -> Operations.discard_teams_token.Output {
        try await discard_teams_token(Operations.discard_teams_token.Input(
            path: path,
            headers: headers
        ))
    }
    /// Lists all web_push tokens belonging to the authenticated user. Returns a paginated list of tokens, including their status, creation dates, and associated metadata.
    ///
    /// - Remark: HTTP `GET /channels/web_push/tokens`.
    /// - Remark: Generated from `#/paths//channels/web_push/tokens/get(get_web_push_tokens)`.
    public func get_web_push_tokens(
        query: Operations.get_web_push_tokens.Input.Query = .init(),
        headers: Operations.get_web_push_tokens.Input.Headers = .init()
    ) async throws -> Operations.get_web_push_tokens.Output {
        try await get_web_push_tokens(Operations.get_web_push_tokens.Input(
            query: query,
            headers: headers
        ))
    }
    /// Saves a web_push token for the authenticated user. This token serves as a credential for accessing channel-specific functionality. Each token is unique to the user and channel combination, allowing for direct communication with the user via the channel.
    ///
    /// - Remark: HTTP `POST /channels/web_push/tokens`.
    /// - Remark: Generated from `#/paths//channels/web_push/tokens/post(save_web_push_token)`.
    public func save_web_push_token(
        headers: Operations.save_web_push_token.Input.Headers = .init(),
        body: Operations.save_web_push_token.Input.Body? = nil
    ) async throws -> Operations.save_web_push_token.Output {
        try await save_web_push_token(Operations.save_web_push_token.Input(
            headers: headers,
            body: body
        ))
    }
    /// Retrieves details of a specific web_push token belonging to the authenticated user. Returns information about the token's status, creation date, and any associated metadata. Users can only access their own tokens.
    ///
    /// - Remark: HTTP `GET /channels/web_push/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/web_push/tokens/{token_id}/get(get_web_push_token)`.
    public func get_web_push_token(
        path: Operations.get_web_push_token.Input.Path,
        headers: Operations.get_web_push_token.Input.Headers = .init()
    ) async throws -> Operations.get_web_push_token.Output {
        try await get_web_push_token(Operations.get_web_push_token.Input(
            path: path,
            headers: headers
        ))
    }
    /// Revokes one of the authenticated user's web_push tokens. This permanently invalidates the specified token, preventing it from being used for future channel access. This action cannot be undone. Users can only revoke their own tokens.
    ///
    /// - Remark: HTTP `DELETE /channels/web_push/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/web_push/tokens/{token_id}/delete(discard_web_push_token)`.
    public func discard_web_push_token(
        path: Operations.discard_web_push_token.Input.Path,
        headers: Operations.discard_web_push_token.Input.Headers = .init()
    ) async throws -> Operations.discard_web_push_token.Output {
        try await discard_web_push_token(Operations.discard_web_push_token.Input(
            path: path,
            headers: headers
        ))
    }
    /// Creates a new installation of a inbox integration for a user. This endpoint is used when an integration needs to be set up with user-specific credentials or configuration.
    ///
    /// - Remark: HTTP `POST /integrations/inbox/installations`.
    /// - Remark: Generated from `#/paths//integrations/inbox/installations/post(save_inbox_installation)`.
    public func save_inbox_installation(
        headers: Operations.save_inbox_installation.Input.Headers = .init(),
        body: Operations.save_inbox_installation.Input.Body? = nil
    ) async throws -> Operations.save_inbox_installation.Output {
        try await save_inbox_installation(Operations.save_inbox_installation.Input(
            headers: headers,
            body: body
        ))
    }
    /// Initiates the installation flow for a inbox integration. This is the first step in a multi-step installation process where user authorization or external service configuration may be required.
    ///
    /// - Remark: HTTP `POST /integrations/inbox/installations/start`.
    /// - Remark: Generated from `#/paths//integrations/inbox/installations/start/post(start_inbox_installation)`.
    public func start_inbox_installation(headers: Operations.start_inbox_installation.Input.Headers = .init()) async throws -> Operations.start_inbox_installation.Output {
        try await start_inbox_installation(Operations.start_inbox_installation.Input(headers: headers))
    }
    /// Creates a new installation of a slack integration for a user. This endpoint is used when an integration needs to be set up with user-specific credentials or configuration.
    ///
    /// - Remark: HTTP `POST /integrations/slack/installations`.
    /// - Remark: Generated from `#/paths//integrations/slack/installations/post(save_slack_installation)`.
    public func save_slack_installation(
        headers: Operations.save_slack_installation.Input.Headers = .init(),
        body: Operations.save_slack_installation.Input.Body? = nil
    ) async throws -> Operations.save_slack_installation.Output {
        try await save_slack_installation(Operations.save_slack_installation.Input(
            headers: headers,
            body: body
        ))
    }
    /// Completes the installation flow for a slack integration. This endpoint is typically called after the user has completed any required authorization steps with slack.
    ///
    /// - Remark: HTTP `POST /integrations/slack/installations/finish`.
    /// - Remark: Generated from `#/paths//integrations/slack/installations/finish/post(finish_slack_installation)`.
    public func finish_slack_installation(
        headers: Operations.finish_slack_installation.Input.Headers = .init(),
        body: Operations.finish_slack_installation.Input.Body? = nil
    ) async throws -> Operations.finish_slack_installation.Output {
        try await finish_slack_installation(Operations.finish_slack_installation.Input(
            headers: headers,
            body: body
        ))
    }
    /// Initiates the installation flow for a slack integration. This is the first step in a multi-step installation process where user authorization or external service configuration may be required.
    ///
    /// - Remark: HTTP `POST /integrations/slack/installations/start`.
    /// - Remark: Generated from `#/paths//integrations/slack/installations/start/post(start_slack_installation)`.
    public func start_slack_installation(
        headers: Operations.start_slack_installation.Input.Headers = .init(),
        body: Operations.start_slack_installation.Input.Body? = nil
    ) async throws -> Operations.start_slack_installation.Output {
        try await start_slack_installation(Operations.start_slack_installation.Input(
            headers: headers,
            body: body
        ))
    }
    /// Creates a new installation of a templates integration for a user. This endpoint is used when an integration needs to be set up with user-specific credentials or configuration.
    ///
    /// - Remark: HTTP `POST /integrations/templates/installations`.
    /// - Remark: Generated from `#/paths//integrations/templates/installations/post(save_templates_installation)`.
    public func save_templates_installation(
        headers: Operations.save_templates_installation.Input.Headers = .init(),
        body: Operations.save_templates_installation.Input.Body? = nil
    ) async throws -> Operations.save_templates_installation.Output {
        try await save_templates_installation(Operations.save_templates_installation.Input(
            headers: headers,
            body: body
        ))
    }
    /// Creates a new installation of a web_push integration for a user. This endpoint is used when an integration needs to be set up with user-specific credentials or configuration.
    ///
    /// - Remark: HTTP `POST /integrations/web_push/installations`.
    /// - Remark: Generated from `#/paths//integrations/web_push/installations/post(save_web_push_installation)`.
    public func save_web_push_installation(
        headers: Operations.save_web_push_installation.Input.Headers = .init(),
        body: Operations.save_web_push_installation.Input.Body? = nil
    ) async throws -> Operations.save_web_push_installation.Output {
        try await save_web_push_installation(Operations.save_web_push_installation.Input(
            headers: headers,
            body: body
        ))
    }
    /// Initiates the installation flow for a web_push integration. This is the first step in a multi-step installation process where user authorization or external service configuration may be required.
    ///
    /// - Remark: HTTP `POST /integrations/web_push/installations/start`.
    /// - Remark: Generated from `#/paths//integrations/web_push/installations/start/post(start_web_push_installation)`.
    public func start_web_push_installation(headers: Operations.start_web_push_installation.Input.Headers = .init()) async throws -> Operations.start_web_push_installation.Output {
        try await start_web_push_installation(Operations.start_web_push_installation.Input(headers: headers))
    }
}

/// Server URLs defined in the OpenAPI document.
public enum Servers {
    /// MagicBell REST API Base URL
    public enum Server1 {
        /// MagicBell REST API Base URL
        public static func url() throws -> Foundation.URL {
            try Foundation.URL(
                validatingOpenAPIServerURL: "https://api.magicbell.com/v2",
                variables: []
            )
        }
    }
    /// MagicBell REST API Base URL
    @available(*, deprecated, renamed: "Servers.Server1.url")
    public static func server1() throws -> Foundation.URL {
        try Foundation.URL(
            validatingOpenAPIServerURL: "https://api.magicbell.com/v2",
            variables: []
        )
    }
}

/// Types generated from the components section of the OpenAPI document.
public enum Components {
    /// Types generated from the `#/components/schemas` section of the OpenAPI document.
    public enum Schemas {
        /// - Remark: Generated from `#/components/schemas/APNSToken`.
        public struct APNSToken: Codable, Hashable, Sendable {
            /// (Optional) The bundle identifier of the application that is registering this token. Use this field to override the default identifier specified in the projects APNs integration.
            ///
            /// - Remark: Generated from `#/components/schemas/APNSToken/app_id`.
            public var app_id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/APNSToken/device_token`.
            public var device_token: Swift.String
            /// (Optional) The APNs environment the token is registered for. If none is provided we assume the token is used in `production`.
            ///
            /// - Remark: Generated from `#/components/schemas/APNSToken/installation_id`.
            @frozen public enum installation_idPayload: String, Codable, Hashable, Sendable, CaseIterable {
                case development = "development"
                case production = "production"
            }
            /// (Optional) The APNs environment the token is registered for. If none is provided we assume the token is used in `production`.
            ///
            /// - Remark: Generated from `#/components/schemas/APNSToken/installation_id`.
            public var installation_id: Components.Schemas.APNSToken.installation_idPayload?
            /// Creates a new `APNSToken`.
            ///
            /// - Parameters:
            ///   - app_id: (Optional) The bundle identifier of the application that is registering this token. Use this field to override the default identifier specified in the projects APNs integration.
            ///   - device_token:
            ///   - installation_id: (Optional) The APNs environment the token is registered for. If none is provided we assume the token is used in `production`.
            public init(
                app_id: Swift.String? = nil,
                device_token: Swift.String,
                installation_id: Components.Schemas.APNSToken.installation_idPayload? = nil
            ) {
                self.app_id = app_id
                self.device_token = device_token
                self.installation_id = installation_id
            }
            public enum CodingKeys: String, CodingKey {
                case app_id
                case device_token
                case installation_id
            }
        }
        /// - Remark: Generated from `#/components/schemas/APNSTokenResponse`.
        public struct APNSTokenResponse: Codable, Hashable, Sendable {
            /// (Optional) The bundle identifier of the application that is registering this token. Use this field to override the default identifier specified in the projects APNs integration.
            ///
            /// - Remark: Generated from `#/components/schemas/APNSTokenResponse/app_id`.
            public var app_id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/APNSTokenResponse/created_at`.
            public var created_at: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/APNSTokenResponse/device_token`.
            public var device_token: Swift.String
            /// - Remark: Generated from `#/components/schemas/APNSTokenResponse/discarded_at`.
            public var discarded_at: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/APNSTokenResponse/id`.
            public var id: Swift.String
            /// (Optional) The APNs environment the token is registered for. If none is provided we assume the token is used in `production`.
            ///
            /// - Remark: Generated from `#/components/schemas/APNSTokenResponse/installation_id`.
            @frozen public enum installation_idPayload: String, Codable, Hashable, Sendable, CaseIterable {
                case development = "development"
                case production = "production"
            }
            /// (Optional) The APNs environment the token is registered for. If none is provided we assume the token is used in `production`.
            ///
            /// - Remark: Generated from `#/components/schemas/APNSTokenResponse/installation_id`.
            public var installation_id: Components.Schemas.APNSTokenResponse.installation_idPayload?
            /// - Remark: Generated from `#/components/schemas/APNSTokenResponse/updated_at`.
            public var updated_at: Foundation.Date?
            /// Creates a new `APNSTokenResponse`.
            ///
            /// - Parameters:
            ///   - app_id: (Optional) The bundle identifier of the application that is registering this token. Use this field to override the default identifier specified in the projects APNs integration.
            ///   - created_at:
            ///   - device_token:
            ///   - discarded_at:
            ///   - id:
            ///   - installation_id: (Optional) The APNs environment the token is registered for. If none is provided we assume the token is used in `production`.
            ///   - updated_at:
            public init(
                app_id: Swift.String? = nil,
                created_at: Foundation.Date,
                device_token: Swift.String,
                discarded_at: Foundation.Date? = nil,
                id: Swift.String,
                installation_id: Components.Schemas.APNSTokenResponse.installation_idPayload? = nil,
                updated_at: Foundation.Date? = nil
            ) {
                self.app_id = app_id
                self.created_at = created_at
                self.device_token = device_token
                self.discarded_at = discarded_at
                self.id = id
                self.installation_id = installation_id
                self.updated_at = updated_at
            }
            public enum CodingKeys: String, CodingKey {
                case app_id
                case created_at
                case device_token
                case discarded_at
                case id
                case installation_id
                case updated_at
            }
        }
        /// - Remark: Generated from `#/components/schemas/ArrayOfAPNSTokenResponses`.
        public struct ArrayOfAPNSTokenResponses: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ArrayOfAPNSTokenResponses/data`.
            public var data: [Components.Schemas.APNSTokenResponse]?
            /// - Remark: Generated from `#/components/schemas/ArrayOfAPNSTokenResponses/links`.
            public var links: Components.Schemas.Links?
            /// Creates a new `ArrayOfAPNSTokenResponses`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - links:
            public init(
                data: [Components.Schemas.APNSTokenResponse]? = nil,
                links: Components.Schemas.Links? = nil
            ) {
                self.data = data
                self.links = links
            }
            public enum CodingKeys: String, CodingKey {
                case data
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/ArrayOfExpoTokenResponses`.
        public struct ArrayOfExpoTokenResponses: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ArrayOfExpoTokenResponses/data`.
            public var data: [Components.Schemas.ExpoTokenResponse]?
            /// - Remark: Generated from `#/components/schemas/ArrayOfExpoTokenResponses/links`.
            public var links: Components.Schemas.Links?
            /// Creates a new `ArrayOfExpoTokenResponses`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - links:
            public init(
                data: [Components.Schemas.ExpoTokenResponse]? = nil,
                links: Components.Schemas.Links? = nil
            ) {
                self.data = data
                self.links = links
            }
            public enum CodingKeys: String, CodingKey {
                case data
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/ArrayOfFCMTokenResponses`.
        public struct ArrayOfFCMTokenResponses: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ArrayOfFCMTokenResponses/data`.
            public var data: [Components.Schemas.FCMTokenResponse]?
            /// - Remark: Generated from `#/components/schemas/ArrayOfFCMTokenResponses/links`.
            public var links: Components.Schemas.Links?
            /// Creates a new `ArrayOfFCMTokenResponses`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - links:
            public init(
                data: [Components.Schemas.FCMTokenResponse]? = nil,
                links: Components.Schemas.Links? = nil
            ) {
                self.data = data
                self.links = links
            }
            public enum CodingKeys: String, CodingKey {
                case data
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/ArrayOfSlackTokenResponses`.
        public struct ArrayOfSlackTokenResponses: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ArrayOfSlackTokenResponses/data`.
            public var data: [Components.Schemas.SlackTokenResponse]?
            /// - Remark: Generated from `#/components/schemas/ArrayOfSlackTokenResponses/links`.
            public var links: Components.Schemas.Links?
            /// Creates a new `ArrayOfSlackTokenResponses`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - links:
            public init(
                data: [Components.Schemas.SlackTokenResponse]? = nil,
                links: Components.Schemas.Links? = nil
            ) {
                self.data = data
                self.links = links
            }
            public enum CodingKeys: String, CodingKey {
                case data
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/ArrayOfTeamsTokenResponses`.
        public struct ArrayOfTeamsTokenResponses: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ArrayOfTeamsTokenResponses/data`.
            public var data: [Components.Schemas.TeamsTokenResponse]?
            /// - Remark: Generated from `#/components/schemas/ArrayOfTeamsTokenResponses/links`.
            public var links: Components.Schemas.Links?
            /// Creates a new `ArrayOfTeamsTokenResponses`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - links:
            public init(
                data: [Components.Schemas.TeamsTokenResponse]? = nil,
                links: Components.Schemas.Links? = nil
            ) {
                self.data = data
                self.links = links
            }
            public enum CodingKeys: String, CodingKey {
                case data
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/ArrayOfWebPushTokenResponses`.
        public struct ArrayOfWebPushTokenResponses: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ArrayOfWebPushTokenResponses/data`.
            public var data: [Components.Schemas.WebPushTokenResponse]?
            /// - Remark: Generated from `#/components/schemas/ArrayOfWebPushTokenResponses/links`.
            public var links: Components.Schemas.Links?
            /// Creates a new `ArrayOfWebPushTokenResponses`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - links:
            public init(
                data: [Components.Schemas.WebPushTokenResponse]? = nil,
                links: Components.Schemas.Links? = nil
            ) {
                self.data = data
                self.links = links
            }
            public enum CodingKeys: String, CodingKey {
                case data
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/DiscardResult`.
        public struct DiscardResult: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/DiscardResult/discarded_at`.
            public var discarded_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/DiscardResult/id`.
            public var id: Swift.String?
            /// Creates a new `DiscardResult`.
            ///
            /// - Parameters:
            ///   - discarded_at:
            ///   - id:
            public init(
                discarded_at: Swift.String? = nil,
                id: Swift.String? = nil
            ) {
                self.discarded_at = discarded_at
                self.id = id
            }
            public enum CodingKeys: String, CodingKey {
                case discarded_at
                case id
            }
        }
        /// - Remark: Generated from `#/components/schemas/ExpoToken`.
        public struct ExpoToken: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ExpoToken/device_token`.
            public var device_token: Swift.String
            /// Creates a new `ExpoToken`.
            ///
            /// - Parameters:
            ///   - device_token:
            public init(device_token: Swift.String) {
                self.device_token = device_token
            }
            public enum CodingKeys: String, CodingKey {
                case device_token
            }
        }
        /// - Remark: Generated from `#/components/schemas/ExpoTokenResponse`.
        public struct ExpoTokenResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ExpoTokenResponse/created_at`.
            public var created_at: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/ExpoTokenResponse/device_token`.
            public var device_token: Swift.String
            /// - Remark: Generated from `#/components/schemas/ExpoTokenResponse/discarded_at`.
            public var discarded_at: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/ExpoTokenResponse/id`.
            public var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/ExpoTokenResponse/updated_at`.
            public var updated_at: Foundation.Date?
            /// Creates a new `ExpoTokenResponse`.
            ///
            /// - Parameters:
            ///   - created_at:
            ///   - device_token:
            ///   - discarded_at:
            ///   - id:
            ///   - updated_at:
            public init(
                created_at: Foundation.Date,
                device_token: Swift.String,
                discarded_at: Foundation.Date? = nil,
                id: Swift.String,
                updated_at: Foundation.Date? = nil
            ) {
                self.created_at = created_at
                self.device_token = device_token
                self.discarded_at = discarded_at
                self.id = id
                self.updated_at = updated_at
            }
            public enum CodingKeys: String, CodingKey {
                case created_at
                case device_token
                case discarded_at
                case id
                case updated_at
            }
        }
        /// - Remark: Generated from `#/components/schemas/FCMToken`.
        public struct FCMToken: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/FCMToken/device_token`.
            public var device_token: Swift.String
            /// - Remark: Generated from `#/components/schemas/FCMToken/installation_id`.
            @frozen public enum installation_idPayload: String, Codable, Hashable, Sendable, CaseIterable {
                case development = "development"
                case production = "production"
            }
            /// - Remark: Generated from `#/components/schemas/FCMToken/installation_id`.
            public var installation_id: Components.Schemas.FCMToken.installation_idPayload?
            /// Creates a new `FCMToken`.
            ///
            /// - Parameters:
            ///   - device_token:
            ///   - installation_id:
            public init(
                device_token: Swift.String,
                installation_id: Components.Schemas.FCMToken.installation_idPayload? = nil
            ) {
                self.device_token = device_token
                self.installation_id = installation_id
            }
            public enum CodingKeys: String, CodingKey {
                case device_token
                case installation_id
            }
        }
        /// - Remark: Generated from `#/components/schemas/FCMTokenResponse`.
        public struct FCMTokenResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/FCMTokenResponse/created_at`.
            public var created_at: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/FCMTokenResponse/device_token`.
            public var device_token: Swift.String
            /// - Remark: Generated from `#/components/schemas/FCMTokenResponse/discarded_at`.
            public var discarded_at: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/FCMTokenResponse/id`.
            public var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/FCMTokenResponse/installation_id`.
            @frozen public enum installation_idPayload: String, Codable, Hashable, Sendable, CaseIterable {
                case development = "development"
                case production = "production"
            }
            /// - Remark: Generated from `#/components/schemas/FCMTokenResponse/installation_id`.
            public var installation_id: Components.Schemas.FCMTokenResponse.installation_idPayload?
            /// - Remark: Generated from `#/components/schemas/FCMTokenResponse/updated_at`.
            public var updated_at: Foundation.Date?
            /// Creates a new `FCMTokenResponse`.
            ///
            /// - Parameters:
            ///   - created_at:
            ///   - device_token:
            ///   - discarded_at:
            ///   - id:
            ///   - installation_id:
            ///   - updated_at:
            public init(
                created_at: Foundation.Date,
                device_token: Swift.String,
                discarded_at: Foundation.Date? = nil,
                id: Swift.String,
                installation_id: Components.Schemas.FCMTokenResponse.installation_idPayload? = nil,
                updated_at: Foundation.Date? = nil
            ) {
                self.created_at = created_at
                self.device_token = device_token
                self.discarded_at = discarded_at
                self.id = id
                self.installation_id = installation_id
                self.updated_at = updated_at
            }
            public enum CodingKeys: String, CodingKey {
                case created_at
                case device_token
                case discarded_at
                case id
                case installation_id
                case updated_at
            }
        }
        /// - Remark: Generated from `#/components/schemas/InboxConfig`.
        public struct InboxConfig: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/InboxConfig/images`.
            public struct imagesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/InboxConfig/images/emptyInboxUrl`.
                public var emptyInboxUrl: Swift.String
                /// Creates a new `imagesPayload`.
                ///
                /// - Parameters:
                ///   - emptyInboxUrl:
                public init(emptyInboxUrl: Swift.String) {
                    self.emptyInboxUrl = emptyInboxUrl
                }
                public enum CodingKeys: String, CodingKey {
                    case emptyInboxUrl
                }
            }
            /// - Remark: Generated from `#/components/schemas/InboxConfig/images`.
            public var images: Components.Schemas.InboxConfig.imagesPayload?
            /// - Remark: Generated from `#/components/schemas/InboxConfig/locale`.
            public var locale: Swift.String?
            /// - Remark: Generated from `#/components/schemas/InboxConfig/theme`.
            public struct themePayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/banner`.
                public struct bannerPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/banner/backgroundColor`.
                    public var backgroundColor: Swift.String
                    /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/banner/backgroundOpacity`.
                    public var backgroundOpacity: Swift.Double?
                    /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/banner/fontSize`.
                    public var fontSize: Swift.String
                    /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/banner/textColor`.
                    public var textColor: Swift.String
                    /// Creates a new `bannerPayload`.
                    ///
                    /// - Parameters:
                    ///   - backgroundColor:
                    ///   - backgroundOpacity:
                    ///   - fontSize:
                    ///   - textColor:
                    public init(
                        backgroundColor: Swift.String,
                        backgroundOpacity: Swift.Double? = nil,
                        fontSize: Swift.String,
                        textColor: Swift.String
                    ) {
                        self.backgroundColor = backgroundColor
                        self.backgroundOpacity = backgroundOpacity
                        self.fontSize = fontSize
                        self.textColor = textColor
                    }
                    public enum CodingKeys: String, CodingKey {
                        case backgroundColor
                        case backgroundOpacity
                        case fontSize
                        case textColor
                    }
                }
                /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/banner`.
                public var banner: Components.Schemas.InboxConfig.themePayload.bannerPayload?
                /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/dialog`.
                public struct dialogPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/dialog/accentColor`.
                    public var accentColor: Swift.String
                    /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/dialog/backgroundColor`.
                    public var backgroundColor: Swift.String
                    /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/dialog/textColor`.
                    public var textColor: Swift.String
                    /// Creates a new `dialogPayload`.
                    ///
                    /// - Parameters:
                    ///   - accentColor:
                    ///   - backgroundColor:
                    ///   - textColor:
                    public init(
                        accentColor: Swift.String,
                        backgroundColor: Swift.String,
                        textColor: Swift.String
                    ) {
                        self.accentColor = accentColor
                        self.backgroundColor = backgroundColor
                        self.textColor = textColor
                    }
                    public enum CodingKeys: String, CodingKey {
                        case accentColor
                        case backgroundColor
                        case textColor
                    }
                }
                /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/dialog`.
                public var dialog: Components.Schemas.InboxConfig.themePayload.dialogPayload?
                /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/footer`.
                public struct footerPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/footer/backgroundColor`.
                    public var backgroundColor: Swift.String
                    /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/footer/borderRadius`.
                    public var borderRadius: Swift.String
                    /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/footer/fontSize`.
                    public var fontSize: Swift.String
                    /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/footer/textColor`.
                    public var textColor: Swift.String
                    /// Creates a new `footerPayload`.
                    ///
                    /// - Parameters:
                    ///   - backgroundColor:
                    ///   - borderRadius:
                    ///   - fontSize:
                    ///   - textColor:
                    public init(
                        backgroundColor: Swift.String,
                        borderRadius: Swift.String,
                        fontSize: Swift.String,
                        textColor: Swift.String
                    ) {
                        self.backgroundColor = backgroundColor
                        self.borderRadius = borderRadius
                        self.fontSize = fontSize
                        self.textColor = textColor
                    }
                    public enum CodingKeys: String, CodingKey {
                        case backgroundColor
                        case borderRadius
                        case fontSize
                        case textColor
                    }
                }
                /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/footer`.
                public var footer: Components.Schemas.InboxConfig.themePayload.footerPayload?
                /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/header`.
                public struct headerPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/header/backgroundColor`.
                    public var backgroundColor: Swift.String
                    /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/header/borderRadius`.
                    public var borderRadius: Swift.String
                    /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/header/fontFamily`.
                    public var fontFamily: Swift.String
                    /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/header/fontSize`.
                    public var fontSize: Swift.String
                    /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/header/textColor`.
                    public var textColor: Swift.String
                    /// Creates a new `headerPayload`.
                    ///
                    /// - Parameters:
                    ///   - backgroundColor:
                    ///   - borderRadius:
                    ///   - fontFamily:
                    ///   - fontSize:
                    ///   - textColor:
                    public init(
                        backgroundColor: Swift.String,
                        borderRadius: Swift.String,
                        fontFamily: Swift.String,
                        fontSize: Swift.String,
                        textColor: Swift.String
                    ) {
                        self.backgroundColor = backgroundColor
                        self.borderRadius = borderRadius
                        self.fontFamily = fontFamily
                        self.fontSize = fontSize
                        self.textColor = textColor
                    }
                    public enum CodingKeys: String, CodingKey {
                        case backgroundColor
                        case borderRadius
                        case fontFamily
                        case fontSize
                        case textColor
                    }
                }
                /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/header`.
                public var header: Components.Schemas.InboxConfig.themePayload.headerPayload?
                /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/icon`.
                public struct iconPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/icon/borderColor`.
                    public var borderColor: Swift.String
                    /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/icon/width`.
                    public var width: Swift.String
                    /// Creates a new `iconPayload`.
                    ///
                    /// - Parameters:
                    ///   - borderColor:
                    ///   - width:
                    public init(
                        borderColor: Swift.String,
                        width: Swift.String
                    ) {
                        self.borderColor = borderColor
                        self.width = width
                    }
                    public enum CodingKeys: String, CodingKey {
                        case borderColor
                        case width
                    }
                }
                /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/icon`.
                public var icon: Components.Schemas.InboxConfig.themePayload.iconPayload?
                /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification`.
                public struct notificationPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/default`.
                    public struct _defaultPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/default/backgroundColor`.
                        public var backgroundColor: Swift.String
                        /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/default/borderRadius`.
                        public var borderRadius: Swift.String
                        /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/default/fontFamily`.
                        public var fontFamily: Swift.String
                        /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/default/fontSize`.
                        public var fontSize: Swift.String
                        /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/default/hover`.
                        public struct hoverPayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/default/hover/backgroundColor`.
                            public var backgroundColor: Swift.String
                            /// Creates a new `hoverPayload`.
                            ///
                            /// - Parameters:
                            ///   - backgroundColor:
                            public init(backgroundColor: Swift.String) {
                                self.backgroundColor = backgroundColor
                            }
                            public enum CodingKeys: String, CodingKey {
                                case backgroundColor
                            }
                        }
                        /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/default/hover`.
                        public var hover: Components.Schemas.InboxConfig.themePayload.notificationPayload._defaultPayload.hoverPayload?
                        /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/default/margin`.
                        public var margin: Swift.String
                        /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/default/state`.
                        public struct statePayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/default/state/color`.
                            public var color: Swift.String
                            /// Creates a new `statePayload`.
                            ///
                            /// - Parameters:
                            ///   - color:
                            public init(color: Swift.String) {
                                self.color = color
                            }
                            public enum CodingKeys: String, CodingKey {
                                case color
                            }
                        }
                        /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/default/state`.
                        public var state: Components.Schemas.InboxConfig.themePayload.notificationPayload._defaultPayload.statePayload?
                        /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/default/textColor`.
                        public var textColor: Swift.String
                        /// Creates a new `_defaultPayload`.
                        ///
                        /// - Parameters:
                        ///   - backgroundColor:
                        ///   - borderRadius:
                        ///   - fontFamily:
                        ///   - fontSize:
                        ///   - hover:
                        ///   - margin:
                        ///   - state:
                        ///   - textColor:
                        public init(
                            backgroundColor: Swift.String,
                            borderRadius: Swift.String,
                            fontFamily: Swift.String,
                            fontSize: Swift.String,
                            hover: Components.Schemas.InboxConfig.themePayload.notificationPayload._defaultPayload.hoverPayload? = nil,
                            margin: Swift.String,
                            state: Components.Schemas.InboxConfig.themePayload.notificationPayload._defaultPayload.statePayload? = nil,
                            textColor: Swift.String
                        ) {
                            self.backgroundColor = backgroundColor
                            self.borderRadius = borderRadius
                            self.fontFamily = fontFamily
                            self.fontSize = fontSize
                            self.hover = hover
                            self.margin = margin
                            self.state = state
                            self.textColor = textColor
                        }
                        public enum CodingKeys: String, CodingKey {
                            case backgroundColor
                            case borderRadius
                            case fontFamily
                            case fontSize
                            case hover
                            case margin
                            case state
                            case textColor
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/default`.
                    public var _default: Components.Schemas.InboxConfig.themePayload.notificationPayload._defaultPayload
                    /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/unread`.
                    public struct unreadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/unread/backgroundColor`.
                        public var backgroundColor: Swift.String
                        /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/unread/hover`.
                        public struct hoverPayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/unread/hover/backgroundColor`.
                            public var backgroundColor: Swift.String
                            /// Creates a new `hoverPayload`.
                            ///
                            /// - Parameters:
                            ///   - backgroundColor:
                            public init(backgroundColor: Swift.String) {
                                self.backgroundColor = backgroundColor
                            }
                            public enum CodingKeys: String, CodingKey {
                                case backgroundColor
                            }
                        }
                        /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/unread/hover`.
                        public var hover: Components.Schemas.InboxConfig.themePayload.notificationPayload.unreadPayload.hoverPayload?
                        /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/unread/state`.
                        public struct statePayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/unread/state/color`.
                            public var color: Swift.String
                            /// Creates a new `statePayload`.
                            ///
                            /// - Parameters:
                            ///   - color:
                            public init(color: Swift.String) {
                                self.color = color
                            }
                            public enum CodingKeys: String, CodingKey {
                                case color
                            }
                        }
                        /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/unread/state`.
                        public var state: Components.Schemas.InboxConfig.themePayload.notificationPayload.unreadPayload.statePayload?
                        /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/unread/textColor`.
                        public var textColor: Swift.String
                        /// Creates a new `unreadPayload`.
                        ///
                        /// - Parameters:
                        ///   - backgroundColor:
                        ///   - hover:
                        ///   - state:
                        ///   - textColor:
                        public init(
                            backgroundColor: Swift.String,
                            hover: Components.Schemas.InboxConfig.themePayload.notificationPayload.unreadPayload.hoverPayload? = nil,
                            state: Components.Schemas.InboxConfig.themePayload.notificationPayload.unreadPayload.statePayload? = nil,
                            textColor: Swift.String
                        ) {
                            self.backgroundColor = backgroundColor
                            self.hover = hover
                            self.state = state
                            self.textColor = textColor
                        }
                        public enum CodingKeys: String, CodingKey {
                            case backgroundColor
                            case hover
                            case state
                            case textColor
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/unread`.
                    public var unread: Components.Schemas.InboxConfig.themePayload.notificationPayload.unreadPayload
                    /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/unseen`.
                    public struct unseenPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/unseen/backgroundColor`.
                        public var backgroundColor: Swift.String
                        /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/unseen/hover`.
                        public struct hoverPayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/unseen/hover/backgroundColor`.
                            public var backgroundColor: Swift.String
                            /// Creates a new `hoverPayload`.
                            ///
                            /// - Parameters:
                            ///   - backgroundColor:
                            public init(backgroundColor: Swift.String) {
                                self.backgroundColor = backgroundColor
                            }
                            public enum CodingKeys: String, CodingKey {
                                case backgroundColor
                            }
                        }
                        /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/unseen/hover`.
                        public var hover: Components.Schemas.InboxConfig.themePayload.notificationPayload.unseenPayload.hoverPayload?
                        /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/unseen/state`.
                        public struct statePayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/unseen/state/color`.
                            public var color: Swift.String
                            /// Creates a new `statePayload`.
                            ///
                            /// - Parameters:
                            ///   - color:
                            public init(color: Swift.String) {
                                self.color = color
                            }
                            public enum CodingKeys: String, CodingKey {
                                case color
                            }
                        }
                        /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/unseen/state`.
                        public var state: Components.Schemas.InboxConfig.themePayload.notificationPayload.unseenPayload.statePayload?
                        /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/unseen/textColor`.
                        public var textColor: Swift.String
                        /// Creates a new `unseenPayload`.
                        ///
                        /// - Parameters:
                        ///   - backgroundColor:
                        ///   - hover:
                        ///   - state:
                        ///   - textColor:
                        public init(
                            backgroundColor: Swift.String,
                            hover: Components.Schemas.InboxConfig.themePayload.notificationPayload.unseenPayload.hoverPayload? = nil,
                            state: Components.Schemas.InboxConfig.themePayload.notificationPayload.unseenPayload.statePayload? = nil,
                            textColor: Swift.String
                        ) {
                            self.backgroundColor = backgroundColor
                            self.hover = hover
                            self.state = state
                            self.textColor = textColor
                        }
                        public enum CodingKeys: String, CodingKey {
                            case backgroundColor
                            case hover
                            case state
                            case textColor
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification/unseen`.
                    public var unseen: Components.Schemas.InboxConfig.themePayload.notificationPayload.unseenPayload
                    /// Creates a new `notificationPayload`.
                    ///
                    /// - Parameters:
                    ///   - _default:
                    ///   - unread:
                    ///   - unseen:
                    public init(
                        _default: Components.Schemas.InboxConfig.themePayload.notificationPayload._defaultPayload,
                        unread: Components.Schemas.InboxConfig.themePayload.notificationPayload.unreadPayload,
                        unseen: Components.Schemas.InboxConfig.themePayload.notificationPayload.unseenPayload
                    ) {
                        self._default = _default
                        self.unread = unread
                        self.unseen = unseen
                    }
                    public enum CodingKeys: String, CodingKey {
                        case _default = "default"
                        case unread
                        case unseen
                    }
                }
                /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/notification`.
                public var notification: Components.Schemas.InboxConfig.themePayload.notificationPayload?
                /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/unseenBadge`.
                public struct unseenBadgePayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/unseenBadge/backgroundColor`.
                    public var backgroundColor: Swift.String
                    /// Creates a new `unseenBadgePayload`.
                    ///
                    /// - Parameters:
                    ///   - backgroundColor:
                    public init(backgroundColor: Swift.String) {
                        self.backgroundColor = backgroundColor
                    }
                    public enum CodingKeys: String, CodingKey {
                        case backgroundColor
                    }
                }
                /// - Remark: Generated from `#/components/schemas/InboxConfig/theme/unseenBadge`.
                public var unseenBadge: Components.Schemas.InboxConfig.themePayload.unseenBadgePayload?
                /// Creates a new `themePayload`.
                ///
                /// - Parameters:
                ///   - banner:
                ///   - dialog:
                ///   - footer:
                ///   - header:
                ///   - icon:
                ///   - notification:
                ///   - unseenBadge:
                public init(
                    banner: Components.Schemas.InboxConfig.themePayload.bannerPayload? = nil,
                    dialog: Components.Schemas.InboxConfig.themePayload.dialogPayload? = nil,
                    footer: Components.Schemas.InboxConfig.themePayload.footerPayload? = nil,
                    header: Components.Schemas.InboxConfig.themePayload.headerPayload? = nil,
                    icon: Components.Schemas.InboxConfig.themePayload.iconPayload? = nil,
                    notification: Components.Schemas.InboxConfig.themePayload.notificationPayload? = nil,
                    unseenBadge: Components.Schemas.InboxConfig.themePayload.unseenBadgePayload? = nil
                ) {
                    self.banner = banner
                    self.dialog = dialog
                    self.footer = footer
                    self.header = header
                    self.icon = icon
                    self.notification = notification
                    self.unseenBadge = unseenBadge
                }
                public enum CodingKeys: String, CodingKey {
                    case banner
                    case dialog
                    case footer
                    case header
                    case icon
                    case notification
                    case unseenBadge
                }
            }
            /// - Remark: Generated from `#/components/schemas/InboxConfig/theme`.
            public var theme: Components.Schemas.InboxConfig.themePayload?
            /// Creates a new `InboxConfig`.
            ///
            /// - Parameters:
            ///   - images:
            ///   - locale:
            ///   - theme:
            public init(
                images: Components.Schemas.InboxConfig.imagesPayload? = nil,
                locale: Swift.String? = nil,
                theme: Components.Schemas.InboxConfig.themePayload? = nil
            ) {
                self.images = images
                self.locale = locale
                self.theme = theme
            }
            public enum CodingKeys: String, CodingKey {
                case images
                case locale
                case theme
            }
        }
        /// - Remark: Generated from `#/components/schemas/Links`.
        public struct Links: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Links/first`.
            public var first: Swift.String?
            /// - Remark: Generated from `#/components/schemas/Links/next`.
            public var next: Swift.String?
            /// - Remark: Generated from `#/components/schemas/Links/prev`.
            public var prev: Swift.String?
            /// Creates a new `Links`.
            ///
            /// - Parameters:
            ///   - first:
            ///   - next:
            ///   - prev:
            public init(
                first: Swift.String? = nil,
                next: Swift.String? = nil,
                prev: Swift.String? = nil
            ) {
                self.first = first
                self.next = next
                self.prev = prev
            }
            public enum CodingKeys: String, CodingKey {
                case first
                case next
                case prev
            }
        }
        /// - Remark: Generated from `#/components/schemas/SlackFinishInstallResponse`.
        public struct SlackFinishInstallResponse: Codable, Hashable, Sendable {
            /// The app ID of the Slack app that was originally configured at the project-level.
            ///
            /// - Remark: Generated from `#/components/schemas/SlackFinishInstallResponse/app_id`.
            public var app_id: Swift.String
            /// The code that was returned from the OAuth flow, and found in the query string of the redirect URL.
            ///
            /// - Remark: Generated from `#/components/schemas/SlackFinishInstallResponse/code`.
            public var code: Swift.String
            /// - Remark: Generated from `#/components/schemas/SlackFinishInstallResponse/redirect_url`.
            public var redirect_url: Swift.String?
            /// Creates a new `SlackFinishInstallResponse`.
            ///
            /// - Parameters:
            ///   - app_id: The app ID of the Slack app that was originally configured at the project-level.
            ///   - code: The code that was returned from the OAuth flow, and found in the query string of the redirect URL.
            ///   - redirect_url:
            public init(
                app_id: Swift.String,
                code: Swift.String,
                redirect_url: Swift.String? = nil
            ) {
                self.app_id = app_id
                self.code = code
                self.redirect_url = redirect_url
            }
            public enum CodingKeys: String, CodingKey {
                case app_id
                case code
                case redirect_url
            }
        }
        /// - Remark: Generated from `#/components/schemas/SlackInstallation`.
        public struct SlackInstallation: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SlackInstallation/access_token`.
            public var access_token: Swift.String
            /// - Remark: Generated from `#/components/schemas/SlackInstallation/app_id`.
            public var app_id: Swift.String
            /// - Remark: Generated from `#/components/schemas/SlackInstallation/authed_user`.
            public struct authed_userPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/SlackInstallation/authed_user/access_token`.
                public var access_token: Swift.String?
                /// - Remark: Generated from `#/components/schemas/SlackInstallation/authed_user/expires_in`.
                public var expires_in: Swift.Int?
                /// - Remark: Generated from `#/components/schemas/SlackInstallation/authed_user/id`.
                public var id: Swift.String
                /// - Remark: Generated from `#/components/schemas/SlackInstallation/authed_user/refresh_token`.
                public var refresh_token: Swift.String?
                /// - Remark: Generated from `#/components/schemas/SlackInstallation/authed_user/scope`.
                public var scope: Swift.String?
                /// - Remark: Generated from `#/components/schemas/SlackInstallation/authed_user/token_type`.
                public var token_type: Swift.String?
                /// Creates a new `authed_userPayload`.
                ///
                /// - Parameters:
                ///   - access_token:
                ///   - expires_in:
                ///   - id:
                ///   - refresh_token:
                ///   - scope:
                ///   - token_type:
                public init(
                    access_token: Swift.String? = nil,
                    expires_in: Swift.Int? = nil,
                    id: Swift.String,
                    refresh_token: Swift.String? = nil,
                    scope: Swift.String? = nil,
                    token_type: Swift.String? = nil
                ) {
                    self.access_token = access_token
                    self.expires_in = expires_in
                    self.id = id
                    self.refresh_token = refresh_token
                    self.scope = scope
                    self.token_type = token_type
                }
                public enum CodingKeys: String, CodingKey {
                    case access_token
                    case expires_in
                    case id
                    case refresh_token
                    case scope
                    case token_type
                }
            }
            /// - Remark: Generated from `#/components/schemas/SlackInstallation/authed_user`.
            public var authed_user: Components.Schemas.SlackInstallation.authed_userPayload
            /// - Remark: Generated from `#/components/schemas/SlackInstallation/bot_user_id`.
            public var bot_user_id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/SlackInstallation/enterprise`.
            public struct enterprisePayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/SlackInstallation/enterprise/id`.
                public var id: Swift.String
                /// - Remark: Generated from `#/components/schemas/SlackInstallation/enterprise/name`.
                public var name: Swift.String
                /// Creates a new `enterprisePayload`.
                ///
                /// - Parameters:
                ///   - id:
                ///   - name:
                public init(
                    id: Swift.String,
                    name: Swift.String
                ) {
                    self.id = id
                    self.name = name
                }
                public enum CodingKeys: String, CodingKey {
                    case id
                    case name
                }
            }
            /// - Remark: Generated from `#/components/schemas/SlackInstallation/enterprise`.
            public var enterprise: Components.Schemas.SlackInstallation.enterprisePayload?
            /// - Remark: Generated from `#/components/schemas/SlackInstallation/expires_in`.
            public var expires_in: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/SlackInstallation/id`.
            public var id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/SlackInstallation/incoming_webhook`.
            public struct incoming_webhookPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/SlackInstallation/incoming_webhook/channel`.
                public var channel: Swift.String
                /// - Remark: Generated from `#/components/schemas/SlackInstallation/incoming_webhook/configuration_url`.
                public var configuration_url: Swift.String
                /// - Remark: Generated from `#/components/schemas/SlackInstallation/incoming_webhook/url`.
                public var url: Swift.String
                /// Creates a new `incoming_webhookPayload`.
                ///
                /// - Parameters:
                ///   - channel:
                ///   - configuration_url:
                ///   - url:
                public init(
                    channel: Swift.String,
                    configuration_url: Swift.String,
                    url: Swift.String
                ) {
                    self.channel = channel
                    self.configuration_url = configuration_url
                    self.url = url
                }
                public enum CodingKeys: String, CodingKey {
                    case channel
                    case configuration_url
                    case url
                }
            }
            /// - Remark: Generated from `#/components/schemas/SlackInstallation/incoming_webhook`.
            public var incoming_webhook: Components.Schemas.SlackInstallation.incoming_webhookPayload?
            /// - Remark: Generated from `#/components/schemas/SlackInstallation/is_enterprise_install`.
            public var is_enterprise_install: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/SlackInstallation/refresh_token`.
            public var refresh_token: Swift.String?
            /// - Remark: Generated from `#/components/schemas/SlackInstallation/scope`.
            public var scope: Swift.String?
            /// - Remark: Generated from `#/components/schemas/SlackInstallation/team`.
            public struct teamPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/SlackInstallation/team/id`.
                public var id: Swift.String
                /// - Remark: Generated from `#/components/schemas/SlackInstallation/team/name`.
                public var name: Swift.String?
                /// Creates a new `teamPayload`.
                ///
                /// - Parameters:
                ///   - id:
                ///   - name:
                public init(
                    id: Swift.String,
                    name: Swift.String? = nil
                ) {
                    self.id = id
                    self.name = name
                }
                public enum CodingKeys: String, CodingKey {
                    case id
                    case name
                }
            }
            /// - Remark: Generated from `#/components/schemas/SlackInstallation/team`.
            public var team: Components.Schemas.SlackInstallation.teamPayload
            /// - Remark: Generated from `#/components/schemas/SlackInstallation/token_type`.
            public var token_type: Swift.String?
            /// Creates a new `SlackInstallation`.
            ///
            /// - Parameters:
            ///   - access_token:
            ///   - app_id:
            ///   - authed_user:
            ///   - bot_user_id:
            ///   - enterprise:
            ///   - expires_in:
            ///   - id:
            ///   - incoming_webhook:
            ///   - is_enterprise_install:
            ///   - refresh_token:
            ///   - scope:
            ///   - team:
            ///   - token_type:
            public init(
                access_token: Swift.String,
                app_id: Swift.String,
                authed_user: Components.Schemas.SlackInstallation.authed_userPayload,
                bot_user_id: Swift.String? = nil,
                enterprise: Components.Schemas.SlackInstallation.enterprisePayload? = nil,
                expires_in: Swift.Int? = nil,
                id: Swift.String? = nil,
                incoming_webhook: Components.Schemas.SlackInstallation.incoming_webhookPayload? = nil,
                is_enterprise_install: Swift.Bool? = nil,
                refresh_token: Swift.String? = nil,
                scope: Swift.String? = nil,
                team: Components.Schemas.SlackInstallation.teamPayload,
                token_type: Swift.String? = nil
            ) {
                self.access_token = access_token
                self.app_id = app_id
                self.authed_user = authed_user
                self.bot_user_id = bot_user_id
                self.enterprise = enterprise
                self.expires_in = expires_in
                self.id = id
                self.incoming_webhook = incoming_webhook
                self.is_enterprise_install = is_enterprise_install
                self.refresh_token = refresh_token
                self.scope = scope
                self.team = team
                self.token_type = token_type
            }
            public enum CodingKeys: String, CodingKey {
                case access_token
                case app_id
                case authed_user
                case bot_user_id
                case enterprise
                case expires_in
                case id
                case incoming_webhook
                case is_enterprise_install
                case refresh_token
                case scope
                case team
                case token_type
            }
        }
        /// - Remark: Generated from `#/components/schemas/SlackStartInstall`.
        public struct SlackStartInstall: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SlackStartInstall/app_id`.
            public var app_id: Swift.String
            /// - Remark: Generated from `#/components/schemas/SlackStartInstall/auth_url`.
            public var auth_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/SlackStartInstall/extra_scopes`.
            public var extra_scopes: [Swift.String]?
            /// - Remark: Generated from `#/components/schemas/SlackStartInstall/redirect_url`.
            public var redirect_url: Swift.String?
            /// Creates a new `SlackStartInstall`.
            ///
            /// - Parameters:
            ///   - app_id:
            ///   - auth_url:
            ///   - extra_scopes:
            ///   - redirect_url:
            public init(
                app_id: Swift.String,
                auth_url: Swift.String? = nil,
                extra_scopes: [Swift.String]? = nil,
                redirect_url: Swift.String? = nil
            ) {
                self.app_id = app_id
                self.auth_url = auth_url
                self.extra_scopes = extra_scopes
                self.redirect_url = redirect_url
            }
            public enum CodingKeys: String, CodingKey {
                case app_id
                case auth_url
                case extra_scopes
                case redirect_url
            }
            public init(from decoder: any Decoder) throws {
                let container = try decoder.container(keyedBy: CodingKeys.self)
                self.app_id = try container.decode(
                    Swift.String.self,
                    forKey: .app_id
                )
                self.auth_url = try container.decodeIfPresent(
                    Swift.String.self,
                    forKey: .auth_url
                )
                self.extra_scopes = try container.decodeIfPresent(
                    [Swift.String].self,
                    forKey: .extra_scopes
                )
                self.redirect_url = try container.decodeIfPresent(
                    Swift.String.self,
                    forKey: .redirect_url
                )
                try decoder.ensureNoAdditionalProperties(knownKeys: [
                    "app_id",
                    "auth_url",
                    "extra_scopes",
                    "redirect_url"
                ])
            }
        }
        /// - Remark: Generated from `#/components/schemas/SlackStartInstallResponseContent`.
        public struct SlackStartInstallResponseContent: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SlackStartInstallResponseContent/app_id`.
            public var app_id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/SlackStartInstallResponseContent/auth_url`.
            public var auth_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/SlackStartInstallResponseContent/scopes`.
            public var scopes: [Swift.String]?
            /// Creates a new `SlackStartInstallResponseContent`.
            ///
            /// - Parameters:
            ///   - app_id:
            ///   - auth_url:
            ///   - scopes:
            public init(
                app_id: Swift.String? = nil,
                auth_url: Swift.String? = nil,
                scopes: [Swift.String]? = nil
            ) {
                self.app_id = app_id
                self.auth_url = auth_url
                self.scopes = scopes
            }
            public enum CodingKeys: String, CodingKey {
                case app_id
                case auth_url
                case scopes
            }
        }
        /// - Remark: Generated from `#/components/schemas/SlackToken`.
        public struct SlackToken: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SlackToken/oauth`.
            public struct oauthPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/SlackToken/oauth/channel_id`.
                public var channel_id: Swift.String
                /// - Remark: Generated from `#/components/schemas/SlackToken/oauth/installation_id`.
                public var installation_id: Swift.String
                /// - Remark: Generated from `#/components/schemas/SlackToken/oauth/scope`.
                public var scope: Swift.String?
                /// Creates a new `oauthPayload`.
                ///
                /// - Parameters:
                ///   - channel_id:
                ///   - installation_id:
                ///   - scope:
                public init(
                    channel_id: Swift.String,
                    installation_id: Swift.String,
                    scope: Swift.String? = nil
                ) {
                    self.channel_id = channel_id
                    self.installation_id = installation_id
                    self.scope = scope
                }
                public enum CodingKeys: String, CodingKey {
                    case channel_id
                    case installation_id
                    case scope
                }
            }
            /// - Remark: Generated from `#/components/schemas/SlackToken/oauth`.
            public var oauth: Components.Schemas.SlackToken.oauthPayload?
            /// Obtained directly from the incoming_webhook object in the installation response from the Slack API.
            ///
            /// - Remark: Generated from `#/components/schemas/SlackToken/webhook`.
            public struct webhookPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/SlackToken/webhook/url`.
                public var url: Swift.String
                /// Creates a new `webhookPayload`.
                ///
                /// - Parameters:
                ///   - url:
                public init(url: Swift.String) {
                    self.url = url
                }
                public enum CodingKeys: String, CodingKey {
                    case url
                }
            }
            /// Obtained directly from the incoming_webhook object in the installation response from the Slack API.
            ///
            /// - Remark: Generated from `#/components/schemas/SlackToken/webhook`.
            public var webhook: Components.Schemas.SlackToken.webhookPayload?
            /// Creates a new `SlackToken`.
            ///
            /// - Parameters:
            ///   - oauth:
            ///   - webhook: Obtained directly from the incoming_webhook object in the installation response from the Slack API.
            public init(
                oauth: Components.Schemas.SlackToken.oauthPayload? = nil,
                webhook: Components.Schemas.SlackToken.webhookPayload? = nil
            ) {
                self.oauth = oauth
                self.webhook = webhook
            }
            public enum CodingKeys: String, CodingKey {
                case oauth
                case webhook
            }
            public init(from decoder: any Decoder) throws {
                let container = try decoder.container(keyedBy: CodingKeys.self)
                self.oauth = try container.decodeIfPresent(
                    Components.Schemas.SlackToken.oauthPayload.self,
                    forKey: .oauth
                )
                self.webhook = try container.decodeIfPresent(
                    Components.Schemas.SlackToken.webhookPayload.self,
                    forKey: .webhook
                )
                try decoder.ensureNoAdditionalProperties(knownKeys: [
                    "oauth",
                    "webhook"
                ])
            }
        }
        /// - Remark: Generated from `#/components/schemas/SlackTokenResponse`.
        public struct SlackTokenResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SlackTokenResponse/created_at`.
            public var created_at: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/SlackTokenResponse/discarded_at`.
            public var discarded_at: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/SlackTokenResponse/id`.
            public var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/SlackTokenResponse/oauth`.
            public struct oauthPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/SlackTokenResponse/oauth/channel_id`.
                public var channel_id: Swift.String
                /// - Remark: Generated from `#/components/schemas/SlackTokenResponse/oauth/installation_id`.
                public var installation_id: Swift.String
                /// - Remark: Generated from `#/components/schemas/SlackTokenResponse/oauth/scope`.
                public var scope: Swift.String?
                /// Creates a new `oauthPayload`.
                ///
                /// - Parameters:
                ///   - channel_id:
                ///   - installation_id:
                ///   - scope:
                public init(
                    channel_id: Swift.String,
                    installation_id: Swift.String,
                    scope: Swift.String? = nil
                ) {
                    self.channel_id = channel_id
                    self.installation_id = installation_id
                    self.scope = scope
                }
                public enum CodingKeys: String, CodingKey {
                    case channel_id
                    case installation_id
                    case scope
                }
            }
            /// - Remark: Generated from `#/components/schemas/SlackTokenResponse/oauth`.
            public var oauth: Components.Schemas.SlackTokenResponse.oauthPayload?
            /// - Remark: Generated from `#/components/schemas/SlackTokenResponse/updated_at`.
            public var updated_at: Foundation.Date?
            /// Obtained directly from the incoming_webhook object in the installation response from the Slack API.
            ///
            /// - Remark: Generated from `#/components/schemas/SlackTokenResponse/webhook`.
            public struct webhookPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/SlackTokenResponse/webhook/url`.
                public var url: Swift.String
                /// Creates a new `webhookPayload`.
                ///
                /// - Parameters:
                ///   - url:
                public init(url: Swift.String) {
                    self.url = url
                }
                public enum CodingKeys: String, CodingKey {
                    case url
                }
            }
            /// Obtained directly from the incoming_webhook object in the installation response from the Slack API.
            ///
            /// - Remark: Generated from `#/components/schemas/SlackTokenResponse/webhook`.
            public var webhook: Components.Schemas.SlackTokenResponse.webhookPayload?
            /// Creates a new `SlackTokenResponse`.
            ///
            /// - Parameters:
            ///   - created_at:
            ///   - discarded_at:
            ///   - id:
            ///   - oauth:
            ///   - updated_at:
            ///   - webhook: Obtained directly from the incoming_webhook object in the installation response from the Slack API.
            public init(
                created_at: Foundation.Date,
                discarded_at: Foundation.Date? = nil,
                id: Swift.String,
                oauth: Components.Schemas.SlackTokenResponse.oauthPayload? = nil,
                updated_at: Foundation.Date? = nil,
                webhook: Components.Schemas.SlackTokenResponse.webhookPayload? = nil
            ) {
                self.created_at = created_at
                self.discarded_at = discarded_at
                self.id = id
                self.oauth = oauth
                self.updated_at = updated_at
                self.webhook = webhook
            }
            public enum CodingKeys: String, CodingKey {
                case created_at
                case discarded_at
                case id
                case oauth
                case updated_at
                case webhook
            }
        }
        /// - Remark: Generated from `#/components/schemas/TeamsToken`.
        public struct TeamsToken: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/TeamsToken/webhook`.
            public struct webhookPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/TeamsToken/webhook/url`.
                public var url: Swift.String?
                /// Creates a new `webhookPayload`.
                ///
                /// - Parameters:
                ///   - url:
                public init(url: Swift.String? = nil) {
                    self.url = url
                }
                public enum CodingKeys: String, CodingKey {
                    case url
                }
            }
            /// - Remark: Generated from `#/components/schemas/TeamsToken/webhook`.
            public var webhook: Components.Schemas.TeamsToken.webhookPayload?
            /// Creates a new `TeamsToken`.
            ///
            /// - Parameters:
            ///   - webhook:
            public init(webhook: Components.Schemas.TeamsToken.webhookPayload? = nil) {
                self.webhook = webhook
            }
            public enum CodingKeys: String, CodingKey {
                case webhook
            }
        }
        /// - Remark: Generated from `#/components/schemas/TeamsTokenResponse`.
        public struct TeamsTokenResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/TeamsTokenResponse/created_at`.
            public var created_at: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/TeamsTokenResponse/discarded_at`.
            public var discarded_at: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/TeamsTokenResponse/id`.
            public var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/TeamsTokenResponse/updated_at`.
            public var updated_at: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/TeamsTokenResponse/webhook`.
            public struct webhookPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/TeamsTokenResponse/webhook/url`.
                public var url: Swift.String?
                /// Creates a new `webhookPayload`.
                ///
                /// - Parameters:
                ///   - url:
                public init(url: Swift.String? = nil) {
                    self.url = url
                }
                public enum CodingKeys: String, CodingKey {
                    case url
                }
            }
            /// - Remark: Generated from `#/components/schemas/TeamsTokenResponse/webhook`.
            public var webhook: Components.Schemas.TeamsTokenResponse.webhookPayload?
            /// Creates a new `TeamsTokenResponse`.
            ///
            /// - Parameters:
            ///   - created_at:
            ///   - discarded_at:
            ///   - id:
            ///   - updated_at:
            ///   - webhook:
            public init(
                created_at: Foundation.Date,
                discarded_at: Foundation.Date? = nil,
                id: Swift.String,
                updated_at: Foundation.Date? = nil,
                webhook: Components.Schemas.TeamsTokenResponse.webhookPayload? = nil
            ) {
                self.created_at = created_at
                self.discarded_at = discarded_at
                self.id = id
                self.updated_at = updated_at
                self.webhook = webhook
            }
            public enum CodingKeys: String, CodingKey {
                case created_at
                case discarded_at
                case id
                case updated_at
                case webhook
            }
        }
        /// - Remark: Generated from `#/components/schemas/TemplatesInstallation`.
        public struct TemplatesInstallation: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/TemplatesInstallation/category`.
            public var category: Swift.String?
            /// - Remark: Generated from `#/components/schemas/TemplatesInstallation/channel`.
            public var channel: Swift.String
            /// - Remark: Generated from `#/components/schemas/TemplatesInstallation/text`.
            public var text: Swift.String
            /// Creates a new `TemplatesInstallation`.
            ///
            /// - Parameters:
            ///   - category:
            ///   - channel:
            ///   - text:
            public init(
                category: Swift.String? = nil,
                channel: Swift.String,
                text: Swift.String
            ) {
                self.category = category
                self.channel = channel
                self.text = text
            }
            public enum CodingKeys: String, CodingKey {
                case category
                case channel
                case text
            }
        }
        /// - Remark: Generated from `#/components/schemas/WebPushStartInstallationResponse`.
        public struct WebPushStartInstallationResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/WebPushStartInstallationResponse/auth_token`.
            public var auth_token: Swift.String
            /// - Remark: Generated from `#/components/schemas/WebPushStartInstallationResponse/public_key`.
            public var public_key: Swift.String
            /// Creates a new `WebPushStartInstallationResponse`.
            ///
            /// - Parameters:
            ///   - auth_token:
            ///   - public_key:
            public init(
                auth_token: Swift.String,
                public_key: Swift.String
            ) {
                self.auth_token = auth_token
                self.public_key = public_key
            }
            public enum CodingKeys: String, CodingKey {
                case auth_token
                case public_key
            }
        }
        /// - Remark: Generated from `#/components/schemas/WebPushToken`.
        public struct WebPushToken: Codable, Hashable, Sendable {
            /// The push subscription URL obtained from PushSubscription.endpoint after calling registration.pushManager.subscribe(). This is the unique URL for this device that push messages will be sent to.
            ///
            /// - Remark: Generated from `#/components/schemas/WebPushToken/endpoint`.
            public var endpoint: Swift.String
            /// The encryption keys from the PushSubscription.getKey() method, needed to encrypt push messages for this subscription.
            ///
            /// - Remark: Generated from `#/components/schemas/WebPushToken/keys`.
            public struct keysPayload: Codable, Hashable, Sendable {
                /// The authentication secret obtained from PushSubscription.getKey('auth'). Used to encrypt push messages for this subscription.
                ///
                /// - Remark: Generated from `#/components/schemas/WebPushToken/keys/auth`.
                public var auth: Swift.String
                /// The P-256 ECDH public key obtained from PushSubscription.getKey('p256dh'). Used to encrypt push messages for this subscription.
                ///
                /// - Remark: Generated from `#/components/schemas/WebPushToken/keys/p256dh`.
                public var p256dh: Swift.String
                /// Creates a new `keysPayload`.
                ///
                /// - Parameters:
                ///   - auth: The authentication secret obtained from PushSubscription.getKey('auth'). Used to encrypt push messages for this subscription.
                ///   - p256dh: The P-256 ECDH public key obtained from PushSubscription.getKey('p256dh'). Used to encrypt push messages for this subscription.
                public init(
                    auth: Swift.String,
                    p256dh: Swift.String
                ) {
                    self.auth = auth
                    self.p256dh = p256dh
                }
                public enum CodingKeys: String, CodingKey {
                    case auth
                    case p256dh
                }
            }
            /// The encryption keys from the PushSubscription.getKey() method, needed to encrypt push messages for this subscription.
            ///
            /// - Remark: Generated from `#/components/schemas/WebPushToken/keys`.
            public var keys: Components.Schemas.WebPushToken.keysPayload
            /// Creates a new `WebPushToken`.
            ///
            /// - Parameters:
            ///   - endpoint: The push subscription URL obtained from PushSubscription.endpoint after calling registration.pushManager.subscribe(). This is the unique URL for this device that push messages will be sent to.
            ///   - keys: The encryption keys from the PushSubscription.getKey() method, needed to encrypt push messages for this subscription.
            public init(
                endpoint: Swift.String,
                keys: Components.Schemas.WebPushToken.keysPayload
            ) {
                self.endpoint = endpoint
                self.keys = keys
            }
            public enum CodingKeys: String, CodingKey {
                case endpoint
                case keys
            }
        }
        /// - Remark: Generated from `#/components/schemas/WebPushTokenResponse`.
        public struct WebPushTokenResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/WebPushTokenResponse/created_at`.
            public var created_at: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/WebPushTokenResponse/discarded_at`.
            public var discarded_at: Foundation.Date?
            /// The push subscription URL obtained from PushSubscription.endpoint after calling registration.pushManager.subscribe(). This is the unique URL for this device that push messages will be sent to.
            ///
            /// - Remark: Generated from `#/components/schemas/WebPushTokenResponse/endpoint`.
            public var endpoint: Swift.String
            /// - Remark: Generated from `#/components/schemas/WebPushTokenResponse/id`.
            public var id: Swift.String
            /// The encryption keys from the PushSubscription.getKey() method, needed to encrypt push messages for this subscription.
            ///
            /// - Remark: Generated from `#/components/schemas/WebPushTokenResponse/keys`.
            public struct keysPayload: Codable, Hashable, Sendable {
                /// The authentication secret obtained from PushSubscription.getKey('auth'). Used to encrypt push messages for this subscription.
                ///
                /// - Remark: Generated from `#/components/schemas/WebPushTokenResponse/keys/auth`.
                public var auth: Swift.String
                /// The P-256 ECDH public key obtained from PushSubscription.getKey('p256dh'). Used to encrypt push messages for this subscription.
                ///
                /// - Remark: Generated from `#/components/schemas/WebPushTokenResponse/keys/p256dh`.
                public var p256dh: Swift.String
                /// Creates a new `keysPayload`.
                ///
                /// - Parameters:
                ///   - auth: The authentication secret obtained from PushSubscription.getKey('auth'). Used to encrypt push messages for this subscription.
                ///   - p256dh: The P-256 ECDH public key obtained from PushSubscription.getKey('p256dh'). Used to encrypt push messages for this subscription.
                public init(
                    auth: Swift.String,
                    p256dh: Swift.String
                ) {
                    self.auth = auth
                    self.p256dh = p256dh
                }
                public enum CodingKeys: String, CodingKey {
                    case auth
                    case p256dh
                }
            }
            /// The encryption keys from the PushSubscription.getKey() method, needed to encrypt push messages for this subscription.
            ///
            /// - Remark: Generated from `#/components/schemas/WebPushTokenResponse/keys`.
            public var keys: Components.Schemas.WebPushTokenResponse.keysPayload
            /// - Remark: Generated from `#/components/schemas/WebPushTokenResponse/updated_at`.
            public var updated_at: Foundation.Date?
            /// Creates a new `WebPushTokenResponse`.
            ///
            /// - Parameters:
            ///   - created_at:
            ///   - discarded_at:
            ///   - endpoint: The push subscription URL obtained from PushSubscription.endpoint after calling registration.pushManager.subscribe(). This is the unique URL for this device that push messages will be sent to.
            ///   - id:
            ///   - keys: The encryption keys from the PushSubscription.getKey() method, needed to encrypt push messages for this subscription.
            ///   - updated_at:
            public init(
                created_at: Foundation.Date,
                discarded_at: Foundation.Date? = nil,
                endpoint: Swift.String,
                id: Swift.String,
                keys: Components.Schemas.WebPushTokenResponse.keysPayload,
                updated_at: Foundation.Date? = nil
            ) {
                self.created_at = created_at
                self.discarded_at = discarded_at
                self.endpoint = endpoint
                self.id = id
                self.keys = keys
                self.updated_at = updated_at
            }
            public enum CodingKeys: String, CodingKey {
                case created_at
                case discarded_at
                case endpoint
                case id
                case keys
                case updated_at
            }
        }
    }
    /// Types generated from the `#/components/parameters` section of the OpenAPI document.
    public enum Parameters {}
    /// Types generated from the `#/components/requestBodies` section of the OpenAPI document.
    public enum RequestBodies {}
    /// Types generated from the `#/components/responses` section of the OpenAPI document.
    public enum Responses {}
    /// Types generated from the `#/components/headers` section of the OpenAPI document.
    public enum Headers {}
}

/// API operations, with input and output types, generated from `#/paths` in the OpenAPI document.
public enum Operations {
    /// Lists all mobile_push tokens belonging to the authenticated user. Returns a paginated list of tokens, including their status, creation dates, and associated metadata.
    ///
    /// - Remark: HTTP `GET /channels/mobile_push/apns/tokens`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/apns/tokens/get(get_mobile_push_apns_tokens)`.
    public enum get_mobile_push_apns_tokens {
        public static let id: Swift.String = "get_mobile_push_apns_tokens"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/channels/mobile_push/apns/tokens/GET/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/mobile_push/apns/tokens/GET/query/limit`.
                public var limit: Swift.Int?
                /// - Remark: Generated from `#/paths/channels/mobile_push/apns/tokens/GET/query/starting_after`.
                public var starting_after: Swift.String?
                /// - Remark: Generated from `#/paths/channels/mobile_push/apns/tokens/GET/query/ending_before`.
                public var ending_before: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - limit:
                ///   - starting_after:
                ///   - ending_before:
                public init(
                    limit: Swift.Int? = nil,
                    starting_after: Swift.String? = nil,
                    ending_before: Swift.String? = nil
                ) {
                    self.limit = limit
                    self.starting_after = starting_after
                    self.ending_before = ending_before
                }
            }
            public var query: Operations.get_mobile_push_apns_tokens.Input.Query
            /// - Remark: Generated from `#/paths/channels/mobile_push/apns/tokens/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_mobile_push_apns_tokens.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_mobile_push_apns_tokens.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.get_mobile_push_apns_tokens.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.get_mobile_push_apns_tokens.Input.Query = .init(),
                headers: Operations.get_mobile_push_apns_tokens.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/mobile_push/apns/tokens/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/channels/mobile_push/apns/tokens/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.ArrayOfAPNSTokenResponses)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.ArrayOfAPNSTokenResponses {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.get_mobile_push_apns_tokens.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.get_mobile_push_apns_tokens.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//channels/mobile_push/apns/tokens/get(get_mobile_push_apns_tokens)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.get_mobile_push_apns_tokens.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.get_mobile_push_apns_tokens.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Saves a mobile_push token for the authenticated user. This token serves as a credential for accessing channel-specific functionality. Each token is unique to the user and channel combination, allowing for direct communication with the user via the channel.
    ///
    /// - Remark: HTTP `POST /channels/mobile_push/apns/tokens`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/apns/tokens/post(save_mobile_push_apns_token)`.
    public enum save_mobile_push_apns_token {
        public static let id: Swift.String = "save_mobile_push_apns_token"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/channels/mobile_push/apns/tokens/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.save_mobile_push_apns_token.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.save_mobile_push_apns_token.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.save_mobile_push_apns_token.Input.Headers
            /// - Remark: Generated from `#/paths/channels/mobile_push/apns/tokens/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/mobile_push/apns/tokens/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.APNSToken)
            }
            public var body: Operations.save_mobile_push_apns_token.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.save_mobile_push_apns_token.Input.Headers = .init(),
                body: Operations.save_mobile_push_apns_token.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/mobile_push/apns/tokens/POST/responses/201/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/channels/mobile_push/apns/tokens/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.APNSToken)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.APNSToken {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.save_mobile_push_apns_token.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.save_mobile_push_apns_token.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//channels/mobile_push/apns/tokens/post(save_mobile_push_apns_token)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.save_mobile_push_apns_token.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.save_mobile_push_apns_token.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Retrieves details of a specific mobile_push token belonging to the authenticated user. Returns information about the token's status, creation date, and any associated metadata. Users can only access their own tokens.
    ///
    /// - Remark: HTTP `GET /channels/mobile_push/apns/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/apns/tokens/{token_id}/get(get_mobile_push_apns_token)`.
    public enum get_mobile_push_apns_token {
        public static let id: Swift.String = "get_mobile_push_apns_token"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/channels/mobile_push/apns/tokens/{token_id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/mobile_push/apns/tokens/{token_id}/GET/path/token_id`.
                public var token_id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - token_id:
                public init(token_id: Swift.String) {
                    self.token_id = token_id
                }
            }
            public var path: Operations.get_mobile_push_apns_token.Input.Path
            /// - Remark: Generated from `#/paths/channels/mobile_push/apns/tokens/{token_id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_mobile_push_apns_token.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_mobile_push_apns_token.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.get_mobile_push_apns_token.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.get_mobile_push_apns_token.Input.Path,
                headers: Operations.get_mobile_push_apns_token.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/mobile_push/apns/tokens/{token_id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/channels/mobile_push/apns/tokens/{token_id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.APNSTokenResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.APNSTokenResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.get_mobile_push_apns_token.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.get_mobile_push_apns_token.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//channels/mobile_push/apns/tokens/{token_id}/get(get_mobile_push_apns_token)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.get_mobile_push_apns_token.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.get_mobile_push_apns_token.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Revokes one of the authenticated user's mobile_push tokens. This permanently invalidates the specified token, preventing it from being used for future channel access. This action cannot be undone. Users can only revoke their own tokens.
    ///
    /// - Remark: HTTP `DELETE /channels/mobile_push/apns/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/apns/tokens/{token_id}/delete(discard_mobile_push_apns_token)`.
    public enum discard_mobile_push_apns_token {
        public static let id: Swift.String = "discard_mobile_push_apns_token"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/channels/mobile_push/apns/tokens/{token_id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/mobile_push/apns/tokens/{token_id}/DELETE/path/token_id`.
                public var token_id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - token_id:
                public init(token_id: Swift.String) {
                    self.token_id = token_id
                }
            }
            public var path: Operations.discard_mobile_push_apns_token.Input.Path
            /// - Remark: Generated from `#/paths/channels/mobile_push/apns/tokens/{token_id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.discard_mobile_push_apns_token.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.discard_mobile_push_apns_token.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.discard_mobile_push_apns_token.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.discard_mobile_push_apns_token.Input.Path,
                headers: Operations.discard_mobile_push_apns_token.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/mobile_push/apns/tokens/{token_id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/channels/mobile_push/apns/tokens/{token_id}/DELETE/responses/200/content/application\/json`.
                    case json(Components.Schemas.DiscardResult)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.DiscardResult {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.discard_mobile_push_apns_token.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.discard_mobile_push_apns_token.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//channels/mobile_push/apns/tokens/{token_id}/delete(discard_mobile_push_apns_token)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.discard_mobile_push_apns_token.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.discard_mobile_push_apns_token.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Lists all mobile_push tokens belonging to the authenticated user. Returns a paginated list of tokens, including their status, creation dates, and associated metadata.
    ///
    /// - Remark: HTTP `GET /channels/mobile_push/expo/tokens`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/expo/tokens/get(get_mobile_push_expo_tokens)`.
    public enum get_mobile_push_expo_tokens {
        public static let id: Swift.String = "get_mobile_push_expo_tokens"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/channels/mobile_push/expo/tokens/GET/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/mobile_push/expo/tokens/GET/query/limit`.
                public var limit: Swift.Int?
                /// - Remark: Generated from `#/paths/channels/mobile_push/expo/tokens/GET/query/starting_after`.
                public var starting_after: Swift.String?
                /// - Remark: Generated from `#/paths/channels/mobile_push/expo/tokens/GET/query/ending_before`.
                public var ending_before: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - limit:
                ///   - starting_after:
                ///   - ending_before:
                public init(
                    limit: Swift.Int? = nil,
                    starting_after: Swift.String? = nil,
                    ending_before: Swift.String? = nil
                ) {
                    self.limit = limit
                    self.starting_after = starting_after
                    self.ending_before = ending_before
                }
            }
            public var query: Operations.get_mobile_push_expo_tokens.Input.Query
            /// - Remark: Generated from `#/paths/channels/mobile_push/expo/tokens/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_mobile_push_expo_tokens.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_mobile_push_expo_tokens.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.get_mobile_push_expo_tokens.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.get_mobile_push_expo_tokens.Input.Query = .init(),
                headers: Operations.get_mobile_push_expo_tokens.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/mobile_push/expo/tokens/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/channels/mobile_push/expo/tokens/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.ArrayOfExpoTokenResponses)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.ArrayOfExpoTokenResponses {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.get_mobile_push_expo_tokens.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.get_mobile_push_expo_tokens.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//channels/mobile_push/expo/tokens/get(get_mobile_push_expo_tokens)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.get_mobile_push_expo_tokens.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.get_mobile_push_expo_tokens.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Saves a mobile_push token for the authenticated user. This token serves as a credential for accessing channel-specific functionality. Each token is unique to the user and channel combination, allowing for direct communication with the user via the channel.
    ///
    /// - Remark: HTTP `POST /channels/mobile_push/expo/tokens`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/expo/tokens/post(save_mobile_push_expo_token)`.
    public enum save_mobile_push_expo_token {
        public static let id: Swift.String = "save_mobile_push_expo_token"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/channels/mobile_push/expo/tokens/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.save_mobile_push_expo_token.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.save_mobile_push_expo_token.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.save_mobile_push_expo_token.Input.Headers
            /// - Remark: Generated from `#/paths/channels/mobile_push/expo/tokens/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/mobile_push/expo/tokens/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.ExpoToken)
            }
            public var body: Operations.save_mobile_push_expo_token.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.save_mobile_push_expo_token.Input.Headers = .init(),
                body: Operations.save_mobile_push_expo_token.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/mobile_push/expo/tokens/POST/responses/201/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/channels/mobile_push/expo/tokens/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.ExpoToken)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.ExpoToken {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.save_mobile_push_expo_token.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.save_mobile_push_expo_token.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//channels/mobile_push/expo/tokens/post(save_mobile_push_expo_token)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.save_mobile_push_expo_token.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.save_mobile_push_expo_token.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Retrieves details of a specific mobile_push token belonging to the authenticated user. Returns information about the token's status, creation date, and any associated metadata. Users can only access their own tokens.
    ///
    /// - Remark: HTTP `GET /channels/mobile_push/expo/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/expo/tokens/{token_id}/get(get_mobile_push_expo_token)`.
    public enum get_mobile_push_expo_token {
        public static let id: Swift.String = "get_mobile_push_expo_token"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/channels/mobile_push/expo/tokens/{token_id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/mobile_push/expo/tokens/{token_id}/GET/path/token_id`.
                public var token_id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - token_id:
                public init(token_id: Swift.String) {
                    self.token_id = token_id
                }
            }
            public var path: Operations.get_mobile_push_expo_token.Input.Path
            /// - Remark: Generated from `#/paths/channels/mobile_push/expo/tokens/{token_id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_mobile_push_expo_token.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_mobile_push_expo_token.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.get_mobile_push_expo_token.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.get_mobile_push_expo_token.Input.Path,
                headers: Operations.get_mobile_push_expo_token.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/mobile_push/expo/tokens/{token_id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/channels/mobile_push/expo/tokens/{token_id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.ExpoTokenResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.ExpoTokenResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.get_mobile_push_expo_token.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.get_mobile_push_expo_token.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//channels/mobile_push/expo/tokens/{token_id}/get(get_mobile_push_expo_token)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.get_mobile_push_expo_token.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.get_mobile_push_expo_token.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Revokes one of the authenticated user's mobile_push tokens. This permanently invalidates the specified token, preventing it from being used for future channel access. This action cannot be undone. Users can only revoke their own tokens.
    ///
    /// - Remark: HTTP `DELETE /channels/mobile_push/expo/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/expo/tokens/{token_id}/delete(discard_mobile_push_expo_token)`.
    public enum discard_mobile_push_expo_token {
        public static let id: Swift.String = "discard_mobile_push_expo_token"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/channels/mobile_push/expo/tokens/{token_id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/mobile_push/expo/tokens/{token_id}/DELETE/path/token_id`.
                public var token_id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - token_id:
                public init(token_id: Swift.String) {
                    self.token_id = token_id
                }
            }
            public var path: Operations.discard_mobile_push_expo_token.Input.Path
            /// - Remark: Generated from `#/paths/channels/mobile_push/expo/tokens/{token_id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.discard_mobile_push_expo_token.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.discard_mobile_push_expo_token.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.discard_mobile_push_expo_token.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.discard_mobile_push_expo_token.Input.Path,
                headers: Operations.discard_mobile_push_expo_token.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/mobile_push/expo/tokens/{token_id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/channels/mobile_push/expo/tokens/{token_id}/DELETE/responses/200/content/application\/json`.
                    case json(Components.Schemas.DiscardResult)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.DiscardResult {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.discard_mobile_push_expo_token.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.discard_mobile_push_expo_token.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//channels/mobile_push/expo/tokens/{token_id}/delete(discard_mobile_push_expo_token)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.discard_mobile_push_expo_token.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.discard_mobile_push_expo_token.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Lists all mobile_push tokens belonging to the authenticated user. Returns a paginated list of tokens, including their status, creation dates, and associated metadata.
    ///
    /// - Remark: HTTP `GET /channels/mobile_push/fcm/tokens`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/fcm/tokens/get(get_mobile_push_fcm_tokens)`.
    public enum get_mobile_push_fcm_tokens {
        public static let id: Swift.String = "get_mobile_push_fcm_tokens"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/channels/mobile_push/fcm/tokens/GET/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/mobile_push/fcm/tokens/GET/query/limit`.
                public var limit: Swift.Int?
                /// - Remark: Generated from `#/paths/channels/mobile_push/fcm/tokens/GET/query/starting_after`.
                public var starting_after: Swift.String?
                /// - Remark: Generated from `#/paths/channels/mobile_push/fcm/tokens/GET/query/ending_before`.
                public var ending_before: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - limit:
                ///   - starting_after:
                ///   - ending_before:
                public init(
                    limit: Swift.Int? = nil,
                    starting_after: Swift.String? = nil,
                    ending_before: Swift.String? = nil
                ) {
                    self.limit = limit
                    self.starting_after = starting_after
                    self.ending_before = ending_before
                }
            }
            public var query: Operations.get_mobile_push_fcm_tokens.Input.Query
            /// - Remark: Generated from `#/paths/channels/mobile_push/fcm/tokens/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_mobile_push_fcm_tokens.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_mobile_push_fcm_tokens.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.get_mobile_push_fcm_tokens.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.get_mobile_push_fcm_tokens.Input.Query = .init(),
                headers: Operations.get_mobile_push_fcm_tokens.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/mobile_push/fcm/tokens/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/channels/mobile_push/fcm/tokens/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.ArrayOfFCMTokenResponses)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.ArrayOfFCMTokenResponses {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.get_mobile_push_fcm_tokens.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.get_mobile_push_fcm_tokens.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//channels/mobile_push/fcm/tokens/get(get_mobile_push_fcm_tokens)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.get_mobile_push_fcm_tokens.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.get_mobile_push_fcm_tokens.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Saves a mobile_push token for the authenticated user. This token serves as a credential for accessing channel-specific functionality. Each token is unique to the user and channel combination, allowing for direct communication with the user via the channel.
    ///
    /// - Remark: HTTP `POST /channels/mobile_push/fcm/tokens`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/fcm/tokens/post(save_mobile_push_fcm_token)`.
    public enum save_mobile_push_fcm_token {
        public static let id: Swift.String = "save_mobile_push_fcm_token"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/channels/mobile_push/fcm/tokens/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.save_mobile_push_fcm_token.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.save_mobile_push_fcm_token.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.save_mobile_push_fcm_token.Input.Headers
            /// - Remark: Generated from `#/paths/channels/mobile_push/fcm/tokens/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/mobile_push/fcm/tokens/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.FCMToken)
            }
            public var body: Operations.save_mobile_push_fcm_token.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.save_mobile_push_fcm_token.Input.Headers = .init(),
                body: Operations.save_mobile_push_fcm_token.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/mobile_push/fcm/tokens/POST/responses/201/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/channels/mobile_push/fcm/tokens/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.FCMToken)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.FCMToken {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.save_mobile_push_fcm_token.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.save_mobile_push_fcm_token.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//channels/mobile_push/fcm/tokens/post(save_mobile_push_fcm_token)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.save_mobile_push_fcm_token.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.save_mobile_push_fcm_token.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Retrieves details of a specific mobile_push token belonging to the authenticated user. Returns information about the token's status, creation date, and any associated metadata. Users can only access their own tokens.
    ///
    /// - Remark: HTTP `GET /channels/mobile_push/fcm/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/fcm/tokens/{token_id}/get(get_mobile_push_fcm_token)`.
    public enum get_mobile_push_fcm_token {
        public static let id: Swift.String = "get_mobile_push_fcm_token"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/channels/mobile_push/fcm/tokens/{token_id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/mobile_push/fcm/tokens/{token_id}/GET/path/token_id`.
                public var token_id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - token_id:
                public init(token_id: Swift.String) {
                    self.token_id = token_id
                }
            }
            public var path: Operations.get_mobile_push_fcm_token.Input.Path
            /// - Remark: Generated from `#/paths/channels/mobile_push/fcm/tokens/{token_id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_mobile_push_fcm_token.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_mobile_push_fcm_token.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.get_mobile_push_fcm_token.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.get_mobile_push_fcm_token.Input.Path,
                headers: Operations.get_mobile_push_fcm_token.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/mobile_push/fcm/tokens/{token_id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/channels/mobile_push/fcm/tokens/{token_id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.FCMTokenResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.FCMTokenResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.get_mobile_push_fcm_token.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.get_mobile_push_fcm_token.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//channels/mobile_push/fcm/tokens/{token_id}/get(get_mobile_push_fcm_token)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.get_mobile_push_fcm_token.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.get_mobile_push_fcm_token.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Revokes one of the authenticated user's mobile_push tokens. This permanently invalidates the specified token, preventing it from being used for future channel access. This action cannot be undone. Users can only revoke their own tokens.
    ///
    /// - Remark: HTTP `DELETE /channels/mobile_push/fcm/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/mobile_push/fcm/tokens/{token_id}/delete(discard_mobile_push_fcm_token)`.
    public enum discard_mobile_push_fcm_token {
        public static let id: Swift.String = "discard_mobile_push_fcm_token"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/channels/mobile_push/fcm/tokens/{token_id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/mobile_push/fcm/tokens/{token_id}/DELETE/path/token_id`.
                public var token_id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - token_id:
                public init(token_id: Swift.String) {
                    self.token_id = token_id
                }
            }
            public var path: Operations.discard_mobile_push_fcm_token.Input.Path
            /// - Remark: Generated from `#/paths/channels/mobile_push/fcm/tokens/{token_id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.discard_mobile_push_fcm_token.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.discard_mobile_push_fcm_token.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.discard_mobile_push_fcm_token.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.discard_mobile_push_fcm_token.Input.Path,
                headers: Operations.discard_mobile_push_fcm_token.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/mobile_push/fcm/tokens/{token_id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/channels/mobile_push/fcm/tokens/{token_id}/DELETE/responses/200/content/application\/json`.
                    case json(Components.Schemas.DiscardResult)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.DiscardResult {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.discard_mobile_push_fcm_token.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.discard_mobile_push_fcm_token.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//channels/mobile_push/fcm/tokens/{token_id}/delete(discard_mobile_push_fcm_token)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.discard_mobile_push_fcm_token.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.discard_mobile_push_fcm_token.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Lists all slack tokens belonging to the authenticated user. Returns a paginated list of tokens, including their status, creation dates, and associated metadata.
    ///
    /// - Remark: HTTP `GET /channels/slack/tokens`.
    /// - Remark: Generated from `#/paths//channels/slack/tokens/get(get_slack_tokens)`.
    public enum get_slack_tokens {
        public static let id: Swift.String = "get_slack_tokens"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/channels/slack/tokens/GET/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/slack/tokens/GET/query/limit`.
                public var limit: Swift.Int?
                /// - Remark: Generated from `#/paths/channels/slack/tokens/GET/query/starting_after`.
                public var starting_after: Swift.String?
                /// - Remark: Generated from `#/paths/channels/slack/tokens/GET/query/ending_before`.
                public var ending_before: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - limit:
                ///   - starting_after:
                ///   - ending_before:
                public init(
                    limit: Swift.Int? = nil,
                    starting_after: Swift.String? = nil,
                    ending_before: Swift.String? = nil
                ) {
                    self.limit = limit
                    self.starting_after = starting_after
                    self.ending_before = ending_before
                }
            }
            public var query: Operations.get_slack_tokens.Input.Query
            /// - Remark: Generated from `#/paths/channels/slack/tokens/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_slack_tokens.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_slack_tokens.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.get_slack_tokens.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.get_slack_tokens.Input.Query = .init(),
                headers: Operations.get_slack_tokens.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/slack/tokens/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/channels/slack/tokens/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.ArrayOfSlackTokenResponses)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.ArrayOfSlackTokenResponses {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.get_slack_tokens.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.get_slack_tokens.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//channels/slack/tokens/get(get_slack_tokens)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.get_slack_tokens.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.get_slack_tokens.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Saves a slack token for the authenticated user. This token serves as a credential for accessing channel-specific functionality. Each token is unique to the user and channel combination, allowing for direct communication with the user via the channel.
    ///
    /// - Remark: HTTP `POST /channels/slack/tokens`.
    /// - Remark: Generated from `#/paths//channels/slack/tokens/post(save_slack_token)`.
    public enum save_slack_token {
        public static let id: Swift.String = "save_slack_token"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/channels/slack/tokens/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.save_slack_token.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.save_slack_token.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.save_slack_token.Input.Headers
            /// - Remark: Generated from `#/paths/channels/slack/tokens/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/slack/tokens/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.SlackToken)
            }
            public var body: Operations.save_slack_token.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.save_slack_token.Input.Headers = .init(),
                body: Operations.save_slack_token.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/slack/tokens/POST/responses/201/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/channels/slack/tokens/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.SlackToken)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.SlackToken {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.save_slack_token.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.save_slack_token.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//channels/slack/tokens/post(save_slack_token)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.save_slack_token.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.save_slack_token.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Retrieves details of a specific slack token belonging to the authenticated user. Returns information about the token's status, creation date, and any associated metadata. Users can only access their own tokens.
    ///
    /// - Remark: HTTP `GET /channels/slack/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/slack/tokens/{token_id}/get(get_slack_token)`.
    public enum get_slack_token {
        public static let id: Swift.String = "get_slack_token"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/channels/slack/tokens/{token_id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/slack/tokens/{token_id}/GET/path/token_id`.
                public var token_id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - token_id:
                public init(token_id: Swift.String) {
                    self.token_id = token_id
                }
            }
            public var path: Operations.get_slack_token.Input.Path
            /// - Remark: Generated from `#/paths/channels/slack/tokens/{token_id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_slack_token.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_slack_token.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.get_slack_token.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.get_slack_token.Input.Path,
                headers: Operations.get_slack_token.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/slack/tokens/{token_id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/channels/slack/tokens/{token_id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.SlackTokenResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.SlackTokenResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.get_slack_token.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.get_slack_token.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//channels/slack/tokens/{token_id}/get(get_slack_token)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.get_slack_token.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.get_slack_token.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Revokes one of the authenticated user's slack tokens. This permanently invalidates the specified token, preventing it from being used for future channel access. This action cannot be undone. Users can only revoke their own tokens.
    ///
    /// - Remark: HTTP `DELETE /channels/slack/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/slack/tokens/{token_id}/delete(discard_slack_token)`.
    public enum discard_slack_token {
        public static let id: Swift.String = "discard_slack_token"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/channels/slack/tokens/{token_id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/slack/tokens/{token_id}/DELETE/path/token_id`.
                public var token_id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - token_id:
                public init(token_id: Swift.String) {
                    self.token_id = token_id
                }
            }
            public var path: Operations.discard_slack_token.Input.Path
            /// - Remark: Generated from `#/paths/channels/slack/tokens/{token_id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.discard_slack_token.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.discard_slack_token.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.discard_slack_token.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.discard_slack_token.Input.Path,
                headers: Operations.discard_slack_token.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/slack/tokens/{token_id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/channels/slack/tokens/{token_id}/DELETE/responses/200/content/application\/json`.
                    case json(Components.Schemas.DiscardResult)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.DiscardResult {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.discard_slack_token.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.discard_slack_token.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//channels/slack/tokens/{token_id}/delete(discard_slack_token)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.discard_slack_token.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.discard_slack_token.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Lists all teams tokens belonging to the authenticated user. Returns a paginated list of tokens, including their status, creation dates, and associated metadata.
    ///
    /// - Remark: HTTP `GET /channels/teams/tokens`.
    /// - Remark: Generated from `#/paths//channels/teams/tokens/get(get_teams_tokens)`.
    public enum get_teams_tokens {
        public static let id: Swift.String = "get_teams_tokens"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/channels/teams/tokens/GET/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/teams/tokens/GET/query/limit`.
                public var limit: Swift.Int?
                /// - Remark: Generated from `#/paths/channels/teams/tokens/GET/query/starting_after`.
                public var starting_after: Swift.String?
                /// - Remark: Generated from `#/paths/channels/teams/tokens/GET/query/ending_before`.
                public var ending_before: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - limit:
                ///   - starting_after:
                ///   - ending_before:
                public init(
                    limit: Swift.Int? = nil,
                    starting_after: Swift.String? = nil,
                    ending_before: Swift.String? = nil
                ) {
                    self.limit = limit
                    self.starting_after = starting_after
                    self.ending_before = ending_before
                }
            }
            public var query: Operations.get_teams_tokens.Input.Query
            /// - Remark: Generated from `#/paths/channels/teams/tokens/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_teams_tokens.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_teams_tokens.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.get_teams_tokens.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.get_teams_tokens.Input.Query = .init(),
                headers: Operations.get_teams_tokens.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/teams/tokens/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/channels/teams/tokens/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.ArrayOfTeamsTokenResponses)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.ArrayOfTeamsTokenResponses {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.get_teams_tokens.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.get_teams_tokens.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//channels/teams/tokens/get(get_teams_tokens)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.get_teams_tokens.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.get_teams_tokens.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Saves a teams token for the authenticated user. This token serves as a credential for accessing channel-specific functionality. Each token is unique to the user and channel combination, allowing for direct communication with the user via the channel.
    ///
    /// - Remark: HTTP `POST /channels/teams/tokens`.
    /// - Remark: Generated from `#/paths//channels/teams/tokens/post(save_teams_token)`.
    public enum save_teams_token {
        public static let id: Swift.String = "save_teams_token"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/channels/teams/tokens/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.save_teams_token.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.save_teams_token.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.save_teams_token.Input.Headers
            /// - Remark: Generated from `#/paths/channels/teams/tokens/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/teams/tokens/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.TeamsToken)
            }
            public var body: Operations.save_teams_token.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.save_teams_token.Input.Headers = .init(),
                body: Operations.save_teams_token.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/teams/tokens/POST/responses/201/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/channels/teams/tokens/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.TeamsToken)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.TeamsToken {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.save_teams_token.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.save_teams_token.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//channels/teams/tokens/post(save_teams_token)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.save_teams_token.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.save_teams_token.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Retrieves details of a specific teams token belonging to the authenticated user. Returns information about the token's status, creation date, and any associated metadata. Users can only access their own tokens.
    ///
    /// - Remark: HTTP `GET /channels/teams/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/teams/tokens/{token_id}/get(get_teams_token)`.
    public enum get_teams_token {
        public static let id: Swift.String = "get_teams_token"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/channels/teams/tokens/{token_id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/teams/tokens/{token_id}/GET/path/token_id`.
                public var token_id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - token_id:
                public init(token_id: Swift.String) {
                    self.token_id = token_id
                }
            }
            public var path: Operations.get_teams_token.Input.Path
            /// - Remark: Generated from `#/paths/channels/teams/tokens/{token_id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_teams_token.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_teams_token.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.get_teams_token.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.get_teams_token.Input.Path,
                headers: Operations.get_teams_token.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/teams/tokens/{token_id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/channels/teams/tokens/{token_id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.TeamsTokenResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.TeamsTokenResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.get_teams_token.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.get_teams_token.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//channels/teams/tokens/{token_id}/get(get_teams_token)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.get_teams_token.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.get_teams_token.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Revokes one of the authenticated user's teams tokens. This permanently invalidates the specified token, preventing it from being used for future channel access. This action cannot be undone. Users can only revoke their own tokens.
    ///
    /// - Remark: HTTP `DELETE /channels/teams/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/teams/tokens/{token_id}/delete(discard_teams_token)`.
    public enum discard_teams_token {
        public static let id: Swift.String = "discard_teams_token"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/channels/teams/tokens/{token_id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/teams/tokens/{token_id}/DELETE/path/token_id`.
                public var token_id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - token_id:
                public init(token_id: Swift.String) {
                    self.token_id = token_id
                }
            }
            public var path: Operations.discard_teams_token.Input.Path
            /// - Remark: Generated from `#/paths/channels/teams/tokens/{token_id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.discard_teams_token.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.discard_teams_token.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.discard_teams_token.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.discard_teams_token.Input.Path,
                headers: Operations.discard_teams_token.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/teams/tokens/{token_id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/channels/teams/tokens/{token_id}/DELETE/responses/200/content/application\/json`.
                    case json(Components.Schemas.DiscardResult)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.DiscardResult {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.discard_teams_token.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.discard_teams_token.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//channels/teams/tokens/{token_id}/delete(discard_teams_token)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.discard_teams_token.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.discard_teams_token.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Lists all web_push tokens belonging to the authenticated user. Returns a paginated list of tokens, including their status, creation dates, and associated metadata.
    ///
    /// - Remark: HTTP `GET /channels/web_push/tokens`.
    /// - Remark: Generated from `#/paths//channels/web_push/tokens/get(get_web_push_tokens)`.
    public enum get_web_push_tokens {
        public static let id: Swift.String = "get_web_push_tokens"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/channels/web_push/tokens/GET/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/web_push/tokens/GET/query/limit`.
                public var limit: Swift.Int?
                /// - Remark: Generated from `#/paths/channels/web_push/tokens/GET/query/starting_after`.
                public var starting_after: Swift.String?
                /// - Remark: Generated from `#/paths/channels/web_push/tokens/GET/query/ending_before`.
                public var ending_before: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - limit:
                ///   - starting_after:
                ///   - ending_before:
                public init(
                    limit: Swift.Int? = nil,
                    starting_after: Swift.String? = nil,
                    ending_before: Swift.String? = nil
                ) {
                    self.limit = limit
                    self.starting_after = starting_after
                    self.ending_before = ending_before
                }
            }
            public var query: Operations.get_web_push_tokens.Input.Query
            /// - Remark: Generated from `#/paths/channels/web_push/tokens/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_web_push_tokens.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_web_push_tokens.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.get_web_push_tokens.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.get_web_push_tokens.Input.Query = .init(),
                headers: Operations.get_web_push_tokens.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/web_push/tokens/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/channels/web_push/tokens/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.ArrayOfWebPushTokenResponses)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.ArrayOfWebPushTokenResponses {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.get_web_push_tokens.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.get_web_push_tokens.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//channels/web_push/tokens/get(get_web_push_tokens)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.get_web_push_tokens.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.get_web_push_tokens.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Saves a web_push token for the authenticated user. This token serves as a credential for accessing channel-specific functionality. Each token is unique to the user and channel combination, allowing for direct communication with the user via the channel.
    ///
    /// - Remark: HTTP `POST /channels/web_push/tokens`.
    /// - Remark: Generated from `#/paths//channels/web_push/tokens/post(save_web_push_token)`.
    public enum save_web_push_token {
        public static let id: Swift.String = "save_web_push_token"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/channels/web_push/tokens/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.save_web_push_token.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.save_web_push_token.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.save_web_push_token.Input.Headers
            /// - Remark: Generated from `#/paths/channels/web_push/tokens/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/web_push/tokens/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.WebPushToken)
            }
            public var body: Operations.save_web_push_token.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.save_web_push_token.Input.Headers = .init(),
                body: Operations.save_web_push_token.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/web_push/tokens/POST/responses/201/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/channels/web_push/tokens/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.WebPushToken)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.WebPushToken {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.save_web_push_token.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.save_web_push_token.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//channels/web_push/tokens/post(save_web_push_token)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.save_web_push_token.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.save_web_push_token.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Retrieves details of a specific web_push token belonging to the authenticated user. Returns information about the token's status, creation date, and any associated metadata. Users can only access their own tokens.
    ///
    /// - Remark: HTTP `GET /channels/web_push/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/web_push/tokens/{token_id}/get(get_web_push_token)`.
    public enum get_web_push_token {
        public static let id: Swift.String = "get_web_push_token"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/channels/web_push/tokens/{token_id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/web_push/tokens/{token_id}/GET/path/token_id`.
                public var token_id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - token_id:
                public init(token_id: Swift.String) {
                    self.token_id = token_id
                }
            }
            public var path: Operations.get_web_push_token.Input.Path
            /// - Remark: Generated from `#/paths/channels/web_push/tokens/{token_id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_web_push_token.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_web_push_token.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.get_web_push_token.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.get_web_push_token.Input.Path,
                headers: Operations.get_web_push_token.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/web_push/tokens/{token_id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/channels/web_push/tokens/{token_id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.WebPushTokenResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.WebPushTokenResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.get_web_push_token.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.get_web_push_token.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//channels/web_push/tokens/{token_id}/get(get_web_push_token)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.get_web_push_token.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.get_web_push_token.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Revokes one of the authenticated user's web_push tokens. This permanently invalidates the specified token, preventing it from being used for future channel access. This action cannot be undone. Users can only revoke their own tokens.
    ///
    /// - Remark: HTTP `DELETE /channels/web_push/tokens/{token_id}`.
    /// - Remark: Generated from `#/paths//channels/web_push/tokens/{token_id}/delete(discard_web_push_token)`.
    public enum discard_web_push_token {
        public static let id: Swift.String = "discard_web_push_token"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/channels/web_push/tokens/{token_id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/web_push/tokens/{token_id}/DELETE/path/token_id`.
                public var token_id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - token_id:
                public init(token_id: Swift.String) {
                    self.token_id = token_id
                }
            }
            public var path: Operations.discard_web_push_token.Input.Path
            /// - Remark: Generated from `#/paths/channels/web_push/tokens/{token_id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.discard_web_push_token.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.discard_web_push_token.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.discard_web_push_token.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.discard_web_push_token.Input.Path,
                headers: Operations.discard_web_push_token.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/channels/web_push/tokens/{token_id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/channels/web_push/tokens/{token_id}/DELETE/responses/200/content/application\/json`.
                    case json(Components.Schemas.DiscardResult)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.DiscardResult {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.discard_web_push_token.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.discard_web_push_token.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//channels/web_push/tokens/{token_id}/delete(discard_web_push_token)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.discard_web_push_token.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.discard_web_push_token.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Creates a new installation of a inbox integration for a user. This endpoint is used when an integration needs to be set up with user-specific credentials or configuration.
    ///
    /// - Remark: HTTP `POST /integrations/inbox/installations`.
    /// - Remark: Generated from `#/paths//integrations/inbox/installations/post(save_inbox_installation)`.
    public enum save_inbox_installation {
        public static let id: Swift.String = "save_inbox_installation"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/integrations/inbox/installations/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.save_inbox_installation.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.save_inbox_installation.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.save_inbox_installation.Input.Headers
            /// - Remark: Generated from `#/paths/integrations/inbox/installations/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/integrations/inbox/installations/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.InboxConfig)
            }
            public var body: Operations.save_inbox_installation.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.save_inbox_installation.Input.Headers = .init(),
                body: Operations.save_inbox_installation.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/integrations/inbox/installations/POST/responses/201/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/integrations/inbox/installations/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.InboxConfig)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.InboxConfig {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.save_inbox_installation.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.save_inbox_installation.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//integrations/inbox/installations/post(save_inbox_installation)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.save_inbox_installation.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.save_inbox_installation.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Initiates the installation flow for a inbox integration. This is the first step in a multi-step installation process where user authorization or external service configuration may be required.
    ///
    /// - Remark: HTTP `POST /integrations/inbox/installations/start`.
    /// - Remark: Generated from `#/paths//integrations/inbox/installations/start/post(start_inbox_installation)`.
    public enum start_inbox_installation {
        public static let id: Swift.String = "start_inbox_installation"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/integrations/inbox/installations/start/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.start_inbox_installation.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.start_inbox_installation.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.start_inbox_installation.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.start_inbox_installation.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/integrations/inbox/installations/start/POST/responses/201/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/integrations/inbox/installations/start/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.InboxConfig)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.InboxConfig {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.start_inbox_installation.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.start_inbox_installation.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//integrations/inbox/installations/start/post(start_inbox_installation)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.start_inbox_installation.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.start_inbox_installation.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Creates a new installation of a slack integration for a user. This endpoint is used when an integration needs to be set up with user-specific credentials or configuration.
    ///
    /// - Remark: HTTP `POST /integrations/slack/installations`.
    /// - Remark: Generated from `#/paths//integrations/slack/installations/post(save_slack_installation)`.
    public enum save_slack_installation {
        public static let id: Swift.String = "save_slack_installation"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/integrations/slack/installations/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.save_slack_installation.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.save_slack_installation.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.save_slack_installation.Input.Headers
            /// - Remark: Generated from `#/paths/integrations/slack/installations/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/integrations/slack/installations/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.SlackInstallation)
            }
            public var body: Operations.save_slack_installation.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.save_slack_installation.Input.Headers = .init(),
                body: Operations.save_slack_installation.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/integrations/slack/installations/POST/responses/201/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/integrations/slack/installations/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.SlackInstallation)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.SlackInstallation {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.save_slack_installation.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.save_slack_installation.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//integrations/slack/installations/post(save_slack_installation)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.save_slack_installation.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.save_slack_installation.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Completes the installation flow for a slack integration. This endpoint is typically called after the user has completed any required authorization steps with slack.
    ///
    /// - Remark: HTTP `POST /integrations/slack/installations/finish`.
    /// - Remark: Generated from `#/paths//integrations/slack/installations/finish/post(finish_slack_installation)`.
    public enum finish_slack_installation {
        public static let id: Swift.String = "finish_slack_installation"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/integrations/slack/installations/finish/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.finish_slack_installation.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.finish_slack_installation.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.finish_slack_installation.Input.Headers
            /// - Remark: Generated from `#/paths/integrations/slack/installations/finish/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/integrations/slack/installations/finish/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.SlackFinishInstallResponse)
            }
            public var body: Operations.finish_slack_installation.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.finish_slack_installation.Input.Headers = .init(),
                body: Operations.finish_slack_installation.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/integrations/slack/installations/finish/POST/responses/201/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/integrations/slack/installations/finish/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.SlackInstallation)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.SlackInstallation {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.finish_slack_installation.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.finish_slack_installation.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//integrations/slack/installations/finish/post(finish_slack_installation)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.finish_slack_installation.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.finish_slack_installation.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Initiates the installation flow for a slack integration. This is the first step in a multi-step installation process where user authorization or external service configuration may be required.
    ///
    /// - Remark: HTTP `POST /integrations/slack/installations/start`.
    /// - Remark: Generated from `#/paths//integrations/slack/installations/start/post(start_slack_installation)`.
    public enum start_slack_installation {
        public static let id: Swift.String = "start_slack_installation"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/integrations/slack/installations/start/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.start_slack_installation.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.start_slack_installation.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.start_slack_installation.Input.Headers
            /// - Remark: Generated from `#/paths/integrations/slack/installations/start/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/integrations/slack/installations/start/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.SlackStartInstall)
            }
            public var body: Operations.start_slack_installation.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.start_slack_installation.Input.Headers = .init(),
                body: Operations.start_slack_installation.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/integrations/slack/installations/start/POST/responses/201/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/integrations/slack/installations/start/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.SlackStartInstallResponseContent)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.SlackStartInstallResponseContent {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.start_slack_installation.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.start_slack_installation.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//integrations/slack/installations/start/post(start_slack_installation)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.start_slack_installation.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.start_slack_installation.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Creates a new installation of a templates integration for a user. This endpoint is used when an integration needs to be set up with user-specific credentials or configuration.
    ///
    /// - Remark: HTTP `POST /integrations/templates/installations`.
    /// - Remark: Generated from `#/paths//integrations/templates/installations/post(save_templates_installation)`.
    public enum save_templates_installation {
        public static let id: Swift.String = "save_templates_installation"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/integrations/templates/installations/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.save_templates_installation.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.save_templates_installation.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.save_templates_installation.Input.Headers
            /// - Remark: Generated from `#/paths/integrations/templates/installations/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/integrations/templates/installations/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.TemplatesInstallation)
            }
            public var body: Operations.save_templates_installation.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.save_templates_installation.Input.Headers = .init(),
                body: Operations.save_templates_installation.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/integrations/templates/installations/POST/responses/201/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/integrations/templates/installations/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.TemplatesInstallation)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.TemplatesInstallation {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.save_templates_installation.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.save_templates_installation.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//integrations/templates/installations/post(save_templates_installation)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.save_templates_installation.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.save_templates_installation.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Creates a new installation of a web_push integration for a user. This endpoint is used when an integration needs to be set up with user-specific credentials or configuration.
    ///
    /// - Remark: HTTP `POST /integrations/web_push/installations`.
    /// - Remark: Generated from `#/paths//integrations/web_push/installations/post(save_web_push_installation)`.
    public enum save_web_push_installation {
        public static let id: Swift.String = "save_web_push_installation"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/integrations/web_push/installations/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.save_web_push_installation.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.save_web_push_installation.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.save_web_push_installation.Input.Headers
            /// - Remark: Generated from `#/paths/integrations/web_push/installations/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/integrations/web_push/installations/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.WebPushToken)
            }
            public var body: Operations.save_web_push_installation.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.save_web_push_installation.Input.Headers = .init(),
                body: Operations.save_web_push_installation.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/integrations/web_push/installations/POST/responses/201/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/integrations/web_push/installations/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.WebPushToken)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.WebPushToken {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.save_web_push_installation.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.save_web_push_installation.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//integrations/web_push/installations/post(save_web_push_installation)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.save_web_push_installation.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.save_web_push_installation.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Initiates the installation flow for a web_push integration. This is the first step in a multi-step installation process where user authorization or external service configuration may be required.
    ///
    /// - Remark: HTTP `POST /integrations/web_push/installations/start`.
    /// - Remark: Generated from `#/paths//integrations/web_push/installations/start/post(start_web_push_installation)`.
    public enum start_web_push_installation {
        public static let id: Swift.String = "start_web_push_installation"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/integrations/web_push/installations/start/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.start_web_push_installation.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.start_web_push_installation.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.start_web_push_installation.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.start_web_push_installation.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/integrations/web_push/installations/start/POST/responses/201/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/integrations/web_push/installations/start/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.WebPushStartInstallationResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.WebPushStartInstallationResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.start_web_push_installation.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.start_web_push_installation.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//integrations/web_push/installations/start/post(start_web_push_installation)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.start_web_push_installation.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.start_web_push_installation.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
}
